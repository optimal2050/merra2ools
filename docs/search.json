[{"path":"https://energyRt.github.io/merra2ools/articles/merra2.html","id":"included-variables","dir":"Articles","previous_headings":"","what":"Included variables","title":"MERRA-2 subset","text":"MERRA-2 variables merra2ools database","code":""},{"path":"https://energyRt.github.io/merra2ools/articles/merra2.html","id":"temperature-at-10-meters-hight-t10m-kelvin-degrees","dir":"Articles","previous_headings":"Included variables","what":"Temperature at 10 meters hight (T10M), Kelvin degrees","title":"MERRA-2 subset","text":"Temperature 10 meters hight, Celsius","code":"summary(x$T10M) summary(x$T10M - 272) # Kelvin -> Celsius  plot_merra(x, name = \"T10M\",             scale = 1, intercept = -272, # Kelvin -> Celsius            limits = c(-50, 50),             legend.name = \"\\u00B0C\",            datetime.position = c(144, 87))  gif_merra(x, name = \"T10M\", dirname = \"images\", fps = 10,           limits = c(-50, 50), intercept = -272,            legend.position = c(0.9, 0.05),            legend.name = expression(\"\\u00B0C\"),           datetime.position = c(144, 87))"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2.html","id":"wind-speed-at-10-and-50-meters-hights-w10m-and-w50m-ms","dir":"Articles","previous_headings":"Included variables","what":"Wind speed at 10 and 50 meters hights (W10M and W50M), m/s","title":"MERRA-2 subset","text":"Wind speed 50 meters hight","code":"summary(x$W50M) # fig.W50M <-  plot_merra(x, name = \"W50M\", limits = c(0, 30),             legend.name = expression(\"m/s\"),            datetime.position = c(144, 87))  # fig.W10M <-  plot_merra(x, name = \"W10M\", limits = c(0, 30),            legend.name = expression(\"m/s\"),            datetime.position = c(144, 87))  gif_merra(x, name = \"W50M\", dirname = \"images\", fps = 12,           limits = c(0, 30),            legend.position = c(0.9, 0.05),            legend.name = expression(\"m/s\"),           datetime.position = c(144, 87))   gif_merra(x, name = \"W10M\", dirname = \"images\", fps = 12,           limits = c(0, 30),            legend.position = c(0.9, 0.05),            legend.name = expression(\"m/s\"),           datetime.position = c(144, 87))"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2.html","id":"global-horizontal-irradiance-swgdn-wattm2","dir":"Articles","previous_headings":"Included variables","what":"Global Horizontal Irradiance (SWGDN), Watt/m2","title":"MERRA-2 subset","text":"Global Horizontal Irradiance","code":"summary(x$SWGDN)  plot_merra(x, name = \"SWGDN\", limits = c(0, 1200),             legend.position = c(0.88, 0.05),             legend.name = (\"W/\\u33A1\"),            datetime.position = c(144, 87))  plot_merra(x, name = \"SWGDN\", dirname = \"images\", fps = 5,           limits = c(0, 1), scale = 1/1000,           legend.position = c(0.88, 0.05),            legend.name = (\"kW/\\u33A1\"),           datetime.position = c(144, 87))  gif_merra(x, name = \"SWGDN\", dirname = \"images\", fps = 5,           limits = c(0, 1200), scale = 1,           legend.position = c(0.88, 0.05),            legend.name = (\"W/\\u33A1\"),           datetime.position = c(144, 87))"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2.html","id":"albedo-albedo-index-0--1","dir":"Articles","previous_headings":"Included variables","what":"Albedo (ALBEDO), index [0..1]","title":"MERRA-2 subset","text":"Surface albedo","code":"summary(x$ALBEDO)  plot_merra(x, name = \"ALBEDO\", dirname = \"images\", fps = 5,           limits = c(0, 1), scale = 1,           legend.position = c(0.9, 0.05),            legend.name = (\"\"),           datetime.position = c(144, 87))  gif_merra(x, name = \"ALBEDO\", dirname = \"images\", fps = 5,           limits = c(0, 1), scale = 1,           legend.position = c(0.9, 0.05),            legend.name = (\"\"),           datetime.position = c(144, 87))"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2.html","id":"surface-atmospheric-preassure-ps-hpa","dir":"Articles","previous_headings":"Included variables","what":"Surface atmospheric preassure (PS), hPa","title":"MERRA-2 subset","text":"Surface pressure Surface pressure difference mean value","code":"summary(x$PS_hPa)  plot_merra(x, name = \"PS_hPa\", dirname = \"images\", fps = 5,           limits = c(500, 1000), scale = 1, direction = 1,           legend.position = c(0.89, 0.05), palette = \"YlGnBu\",           legend.name = (\"hPa\"),           datetime.position = c(144, 87))  gif_merra(x, name = \"PS_hPa\", dirname = \"images\", fps = 24,           limits = c(500, 1000), scale = 1, direction = 1,           legend.position = c(0.89, 0.05),            legend.name = (\"hPa\"),           datetime.position = c(144, 87)) PS_mean <- x %>%    group_by(locid) %>%   summarise(PS_mean = mean(PS_hPa, na.rm = TRUE), .groups = \"drop\")  x <- full_join(x, PS_mean) %>%   mutate(dPS = PS_hPa - PS_mean) summary(x$dPS)  plot_merra(x, name = \"dPS\", dirname = \"images\", fps = 5,           limits = c(-30, 30), scale = 1, direction = -1,           legend.position = c(0.9, 0.05),            legend.name = (\"hPa\"),           datetime.position = c(144, 87))  gif_merra(x, name = \"dPS\", dirname = \"images\", fps = 5,           limits = c(-30, 30), scale = 1, direction = -1,           legend.position = c(0.89, 0.05),            legend.name = (\"hPa\"),           datetime.position = c(144, 87)) fig.T10M <- function(x) {   plot_merra(x, name = \"T10M\", intercept = -272,               limits = c(-50, 50), legend.name = \"\\u00B0C\",            # datetime.position = c(144, 87),             # legend.position = c(0.89, 0.05),             legend.position = NULL,            datetime.position = NA,            expand.x = c(0.002, 0.005), expand.y = c(0.002, 0.005)) } # fig.T10M(x)  fig.W50M <- function(x) {     plot_merra(x, name = \"W50M\", limits = c(0, 30),             legend.name = expression(\"m/s\"),            datetime.position = c(110, 87),            # legend.position = c(0.89, 0.05),             legend.position = NULL,            # datetime.position = NA,            expand.x = c(0.002, 0.005), expand.y = c(0.002, 0.005)            ) } # fig.W50M(x)  fig.W10M <- function(x) {     plot_merra(x, name = \"W10M\", limits = c(0, 30),             legend.name = expression(\"m/s\"),            # datetime.position = c(144, 87)            # legend.position = c(0.89, 0.05),             legend.position = NULL,            datetime.position = NA,            expand.x = c(0.002, 0.005), expand.y = c(0.002, 0.005)            ) } # fig.W10M(x)  fig.ALBEDO <- function(x) {   plot_merra(x, name = \"ALBEDO\", dirname = \"images\", fps = 5,           limits = c(0, 1), scale = 1,           # legend.position = c(0.9, 0.05),            legend.position = NULL,           legend.name = (\"\"),             datetime.position = NA,            expand.x = c(0.002, 0.005), expand.y = c(0.002, 0.005)            ) } # fig.ALBEDO(x)  fig.SWGDN <- function(x) {   plot_merra(x, name = \"SWGDN\", limits = c(0, 1200),             # legend.position = c(0.88, 0.05),             legend.position = NULL,            legend.name = (\"W/\\u33A1\"),             datetime.position = NULL,            expand.x = c(0.002, 0.005), expand.y = c(0.002, 0.005)            ) } # fig.SWGDN(x)  fig.PS_hPa <- function(x) {   plot_merra(x, name = \"PS_hPa\", dirname = \"images\", fps = 5,           limits = c(500, 1000), scale = 1, direction = 1,           # palette = \"YlGnBu\",           # legend.position = c(0.89, 0.05),            legend.position = NULL,           legend.name = (\"hPa\"),            datetime.position = NA,            expand.x = c(0.002, 0.005), expand.y = c(0.002, 0.005)            ) } # fig.PS_hPa(x)  fig.dPS <- function(x) {   plot_merra(x, name = \"dPS\", dirname = \"images\", fps = 5,           limits = c(-50, 50), scale = 1, direction = -1,           # legend.position = c(0.9, 0.05),            legend.position = NULL,           legend.name = (\"hPa\"),            datetime.position = NA,            expand.x = c(0.002, 0.005), expand.y = c(0.002, 0.005)            ) } # fig.dPS(x) library(\"cowplot\") fig.grid <- function(x) {   plot_grid(fig.W10M(x), fig.W50M(x),             fig.SWGDN(x), fig.ALBEDO(x),             fig.T10M(x), fig.PS_hPa(x),             # fig.dPS(x),             labels = c(\"W10M\", \"W50M\", \"SWGDN\", \"ALBEDO\", \"T10M\", \"PS\"),             ncol = 2, nrow = 3, hjust = -0.1, vjust = 1.1, label_size = 10) } # ii <- lubridate::month(x$UTC) == 2; summary(ii) fig.grid(x)  gif_merra(x, FUN = \"fig.grid\", dirname = \"images\", fps = 10,           gif.width = 576, gif.height = 360 * 1.5)   # gif_merra(x, FUN = \"fig.grid\", dirname = \"images\", fps = 10, #           gif.width = 576 * 2, gif.height = 360 * 3)   # gif_merra(x, FUN = \"fig.grid\", dirname = \"images\", fps = 10, #           gif.width = 576/1.5, gif.height = 360)   fig.grid2 <- function(x) {   plot_grid(fig.W10M(x), fig.W50M(x),             fig.SWGDN(x), fig.ALBEDO(x),             fig.T10M(x), fig.dPS(x),             # fig.dPS(x),             labels = c(\"W10M\", \"W50M\", \"SWGDN\", \"ALBEDO\", \"T10M\", \"dPS\"),             ncol = 2, nrow = 3, hjust = -0.1, vjust = 1.1, label_size = 10) }  gif_merra(x, FUN = \"fig.grid2\", dirname = \"images\", fps = 5,           gif.width = 576, gif.height = 360 * 1.5)"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Get started with `merra2ools`","text":"merra2ools R library dataset. assumed R version >=4.0 pre-installed. (Rtools also required Windows build several packages source GitHub). also recommended (though required) use RStudio IDE R. merra2ools depends several R-packages (yet available system) installed along merra2ools installation (see package DESCRIPTION details). package also requires dataset downloaded separately installation package (see ). Though merra2ools package can operate without dataset (estimation capacity factors, solar geometry, etc.), supplied data formatted way expected package functions.  merra2sample 12-days example merra2ools subset (41 years), 21st-day month 2010. can installed directly GitHub, used quick checks data format; also used build vignettes (articles) merra2ools package. Since example dataset considerable size R-packages (~0.5Gb) mostly repeats main dataset, saved separate package. merra2ools dataset (~270Gb) can downloaded https://doi.org/10.5061/dryad.v41ns1rtt, unziped dedicated directory internal external hard-drive, configured described .","code":"pkg <- function() rownames(installed.packages()) # returns names of installed packages # Installation of `merra2ools` package if (!(\"remotes\" %in% pkg())) install.packages(\"remotes\") if (!(\"merra2ools\" %in% pkg())) remotes::install_github(\"energyRt/merra2ools\", dependencies = TRUE) if (!(\"merra2sample\" %in% pkg())) remotes::install_github(\"energyRt/merra2sample\") # Packages used in the vignette if (!(\"rnaturalearthhires\" %in% pkg()))   devtools::install_github(\"ropensci/rnaturalearthhires\") if (!(\"scales\" %in% pkg())) install.packages(\"scales\") if (!(\"cowplot\" %in% pkg())) install.packages(\"cowplot\") if (!(\"kableExtra\" %in% pkg())) install.packages(\"kableExtra\")"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"setting-up","dir":"Articles","previous_headings":"","what":"Setting up","title":"Get started with `merra2ools`","text":"Loading packages used vignette. Checking dataset connected. Connecting dataset (yet connected)","code":"library(tidyverse) library(merra2ools) library(sf) library(cowplot) library(kableExtra) check_merra2() #> 492 merra2ools data-files found check_merra2(\"PATH TO THE DOWNLOADED DATA\") # check if the data in the directory set_merra2_options(merra2.dir = \"PATH TO THE DOWNLOADED DATA\") # safe the path get_merra2_dir()  # check if the path is saved check_merra2(detailed = T)"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"accessing-the-data","dir":"Articles","previous_headings":"","what":"Accessing the data","title":"Get started with `merra2ools`","text":"database organized monthly files fst format. two functions read whole file (read_merra_file()) read subset specified locations time period (get_merra2_subset()). functions provide option read dataset scaled format, reported units (default) “raw” format (integers - way stored). Subset raw data (integers) merra2ools subset","code":"x <- read_merra_file(\"202012\", as_integers = TRUE) x <- get_merra2_subset(from = \"20201130 01\", to = \"20201201 23\")"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"locations-identifiers","dir":"Articles","previous_headings":"","what":"Locations identifiers","title":"Get started with `merra2ools`","text":"Every data-point used MERRA-2 collections (see dataset description) associated coordinates time. original MERRA-2 files index-variables V1, V2, V3 identify longitude, latitude, time (hour) dimensions respectively. convenience, location identifier locid generated Kronecker product V1 V2. locid identifier used key variable MERRA-2 locations, instead V1 V2. time identifier (V3 - hour) combined year, month, day UTC key variable. total number location points MERRA-2 207,936 (576 X 361). identifier saved merra2ools package \\data directory can called data function (data(\"locid\")) directly locid. Location identifiers locid_map","code":"# Ways to call `locid` data.frame data(\"locid\") merra2ools::locid locid lon <- unique(locid$lon) head(lon, 10) length(lon)  lat <- unique(locid$lat) head(lat, 10) length(lat)  lo <- unique(c(seq(-180, max(lon), by = 30), max(lon))) %>% sort() la <- seq(-90, 90, by = 15)  locid_sample <- filter(locid, lon %in% lo, lat %in% la) world_map <- rnaturalearth::ne_countries(scale = \"small\", returnclass = \"sf\")  fig.locid <- ggplot() +    geom_sf(fill = \"wheat\", alpha = .75, colour = NA, size = 0.25, data = world_map) +   theme_bw() +   geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),     data = data.frame(xmin = -180, xmax = 180, ymin = -90, ymax = 90),     alpha = .5, fill = NA, colour = \"grey85\") +   geom_point(aes(x = lon, y = lat), data = locid_sample, size = 1, colour = \"red\") +    geom_text(aes(x = lon, y = lat, label = locid), data = locid_sample,               position = position_nudge(y = 4),              alpha = 0.75,              size = unit(3, \"lines\")) +   scale_x_continuous(breaks = ceiling(lo), minor_breaks = ceiling(lo)) +   scale_y_continuous(breaks = round(la), minor_breaks = ceiling(la)) +    labs(x = \"lon\") +   coord_sf(xlim = c(-190, 190), ylim = c(-95, 95)) +   # labs(x = \"lon\", title = \"Location ID (`locid`) layout of MERRA-2 subset\") +   theme(plot.title = element_text(hjust = 0.5),         axis.text = element_text(family = 'arial'))  ggsave(\"images/locid_map2.png\", fig.locid, width = 9, height = 5.)"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"matching-locid-with-a-map","dir":"Articles","previous_headings":"","what":"Matching locid with a map","title":"Get started with `merra2ools`","text":"Location identifiers merra2ools dataset can seen spatial points centers (centroids) spatial grid spatial polygons. Subsetting locid particular geographical region can done using “map” region SpatialPolygonsDataFrame format (spdf). Function get_locid offers two alternative criteria selecting locids implemented get_locid function: * locid spatial points overlay map’s spatial polygons (method = “points”); * locid spatial polygon intersect map’s spatial polygons (method = “intersect”).   Three examples compare subsetting two methods three different regions/countries.","code":""},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"example-1--florida-usa","dir":"Articles","previous_headings":"Matching locid with a map","what":"Example 1. Florida, USA","title":"Get started with `merra2ools`","text":"MERRA-2 locations Florida","code":"# US-map usa_sf <- rnaturalearth::ne_states(iso_a2 = \"us\", returnclass = \"sf\")  # Subset Florida map florida_sf <- usa_sf[usa_sf$name_en == \"Florida\",]  # location IDs, two methods locid_fl_p <- get_locid(florida_sf, method = \"points\") locid_fl_i <- get_locid(florida_sf, method = \"polygons\")  # MERRA-2 grid for the selected `locid's` locid_fl_grid <- get_merra2_grid(\"poly\", locid = locid_fl_i)  # Plot a <- ggplot() +   geom_sf(data = florida_sf, fill = \"wheat\") +   geom_sf(data = locid_fl_grid, color = \"darkgrey\", fill = NA) +   geom_point(aes(lon, lat), data = locid[locid_fl_p,], color = \"red\",               shape = 16) +   geom_point(aes(lon, lat), data = locid[locid_fl_i,], color = \"red\", shape = 1) +   theme_bw() + labs(x = \"\", y = \"\") ggsave(\"images/example1_florida_locids.png\", a, width = 5, height = 5)"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"example-2--iceland","dir":"Articles","previous_headings":"Matching locid with a map","what":"Example 2. Iceland","title":"Get started with `merra2ools`","text":"MERRA-2 locations Iceland","code":"# Map iceland_sf <- rnaturalearth::ne_countries(country = \"iceland\", scale = \"large\",                                           returnclass = \"sf\")  # location IDs, two methods locid_isl_p <- get_locid(iceland_sf, method = \"points\") locid_isl_i <- get_locid(iceland_sf, method = \"poly\")  # MERRA-2 grid for the selected `locid's` locid_isl_grid <- get_merra2_grid(\"poly\", locid = locid_isl_i)  # Plots a <- ggplot() +   geom_sf(data = iceland_sf, fill = \"wheat\") +   geom_sf(data = locid_isl_grid, color = \"darkgrey\", fill = NA) +   geom_point(aes(lon, lat), data = locid[locid_isl_p,], color = \"red\", shape = 16) +   geom_point(aes(lon, lat), data = locid[locid_isl_i,], color = \"red\", shape = 1) +   theme_bw() + labs(x = \"\", y = \"\") ggsave(\"images/example2_iceland_locids.png\", a, width = 5, height = 5)"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"example-3--kenya","dir":"Articles","previous_headings":"Matching locid with a map","what":"Example 3. Kenya","title":"Get started with `merra2ools`","text":"MERRA-2 locations Kenya","code":"# Map kenya_sf <- rnaturalearth::ne_countries(country = \"kenya\", returnclass = \"sf\")  # location IDs, two methods locid_ken_p <- get_locid(kenya_sf, method = \"points\") locid_ken_i <- get_locid(kenya_sf, method = \"poly\")  # MERRA-2 grid for the selected `locid's` locid_ken_grid <- get_merra2_grid(\"poly\", locid = locid_ken_i)  # Plot a <- ggplot() +   geom_sf(data = kenya_sf, fill = \"wheat\") +   geom_sf(data = locid_ken_grid, color = \"darkgrey\", fill = NA) +   geom_point(aes(lon, lat), data = locid[locid_ken_p,], color = \"red\", shape = 16) +   geom_point(aes(lon, lat), data = locid[locid_ken_i,], color = \"red\", shape = 1) +   theme_bw() + labs(x = \"\", y = \"\") ggsave(\"images/example3_kenya_locids.png\", a, width = 5, height = 5)"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"get-merra-2-subset","dir":"Articles","previous_headings":"","what":"Get MERRA-2 subset","title":"Get started with `merra2ools`","text":"","code":"merra_fl <- get_merra2_subset(locid = locid_fl_i,                                from = \"20190101 00\", to = \"20191231 23\",                                tz = \"US/Eastern\")  merra_isl <- get_merra2_subset(locid = locid_isl_i,                                 from = \"20190101 00\", to = \"20191231 23\",                                 tz = \"Atlantic/Reykjavik\")  merra_ken <- get_merra2_subset(locid = locid_ken_i,                                 from = \"20190101 00\", to = \"20191231 23\",                                 tz = \"Africa/Nairobi\")"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"wind-power","dir":"Articles","previous_headings":"","what":"Wind power","title":"Get started with `merra2ools`","text":"Estimation wind power capacity factors (CF) first example - Florida.","code":"# Estimate capacity factors merra_fl <- fWindCF(merra_fl, height = 150)  # Annual averages win_fl_y <- merra_fl %>% # annual averages   group_by(locid) %>%   summarise(win150af = mean(win150af, na.rm = T)) %>%   add_merra2_grid()"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"cluster-locations","dir":"Articles","previous_headings":"Wind power","what":"Cluster locations","title":"Get started with `merra2ools`","text":"can also cluster locations based correlation certain timeseries across locations. Loss information function number clusters Clustered location based correlation wind capacity factors Iceland Kenya","code":"# Cluster locations based on correlation win_fl_cl <- cluster_locid(   merra_fl,    varname = \"win150af\",   locid_info = locid_fl_grid,    max_loss = .05,   verbose = T)   tol_level <- .10 # 10% # tol_level <- .05 # 5%  # Select clusters with {tol_level}% tolerance (loss of standard deviation)  win_fl_cl_k <- win_fl_cl %>%      filter(sd_loss <= tol_level) %>%      mutate(k_min = (k == min(k))) %>% ungroup() %>%      filter(k_min) %>% select(-k_min) # Cluster-loss figure win_fl_cl_kk <- win_fl_cl %>%   group_by(k) %>%   summarise(sd_loss = max(sd_loss), N = max(N), .groups = \"drop\")  locid_win_cl_k_i <- win_fl_cl_k %>%   group_by(k) %>%   summarise(sd_loss = max(sd_loss), N = max(N), .groups = \"drop\")  a <- ggplot(win_fl_cl_kk) +   geom_line(aes(k, sd_loss), color = \"dodgerblue\", linewidth = 1.5) +   geom_point(aes(k, sd_loss), color = \"red\", data = locid_win_cl_k_i) +   geom_hline(yintercept = tol_level, color = \"red\", linetype = 2) +   scale_y_continuous(labels = scales::percent, limits = c(0, NA)) +   # scale_x_continuous(breaks = rev_integer_breaks(5)) +   labs(x = \"Number of clusters (k)\", y = \"loss, % of s.d.\") +   theme_bw() ggsave(\"images/example1_florida_wind_clusters.png\", a, width = 4.5,         height = 3) win_fl_cl_sf <- locid_fl_grid %>%   st_make_valid() %>%   left_join(     select(win_fl_cl_k, any_of(c(\"locid\", \"cluster\")))     ) %>%   filter(!is.na(cluster)) %>%   mutate(cluster = factor(cluster))  a <- ggplot(win_fl_cl_sf) +   geom_sf(fill = \"lightgrey\", data = florida_sf) +   geom_sf(aes(fill = cluster), color = NA) +   geom_sf(color = alpha(\"black\", 1), fill = NA, data = florida_sf) +   scale_fill_viridis_d(option = \"H\", direction = 1, name = \"Cluster\") +   labs(title = paste0(\"Clustered wind sites by region\",                       \", sd_loss <= \", tol_level * 100, \"%\")) +   theme_bw() a ggsave(\"images/example1_florida_wind_clusters_map.png\", a,         width = 5, height = 5) # Estimate capacity factors merra_isl <- fWindCF(merra_isl, height = 150)  # Annual averages win_isl_y <- merra_isl %>% # annual averages   group_by(locid) %>%   summarise(win150af = mean(win150af, na.rm = T)) %>%   add_merra2_grid() # Estimate capacity factors merra_ken <- fWindCF(merra_ken, height = 150)  # Annual averages win_ken_y <- merra_ken %>%    group_by(locid) %>%   summarise(win150af = mean(win150af, na.rm = T)) %>%   add_merra2_grid()"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"solar-power","dir":"Articles","previous_headings":"","what":"Solar power","title":"Get started with `merra2ools`","text":"Estimation Plane Array Irradiance (POA) fixed tilted (fl) array-systems Florida Iceland Kenya Comparative figure use scale, Wind power capacity factors (CF) Solar irradiance Plane Array (POA) regions","code":"# Estimate POA merra_fl <- merra_fl %>% fPOA(array.type = \"fl\")  # Annual averages poa_fl_y <- merra_fl %>%   group_by(locid) %>%   summarise(POA.fl = sum(POA.fl, na.rm = T)/365/1e3) %>%   add_merra2_grid() # Estimate POA merra_isl <- merra_isl %>% fPOA(array.type = \"fl\")  # Annual averages poa_isl_y <- merra_isl %>%   group_by(locid) %>%   summarise(POA.fl = sum(POA.fl, na.rm = T)/365/1e3) %>%   add_merra2_grid() # Estimate POA merra_ken <- merra_ken %>% fPOA(array.type = \"fl\")  # Annual averages poa_ken_y <- merra_ken %>%   group_by(locid) %>%   summarise(POA.fl = sum(POA.fl, na.rm = T)/365/1e3) %>%   add_merra2_grid() wnd_range <- range(win_fl_y$win150af, win_isl_y$win150af, win_ken_y$win150af) wnd_breaks <- scales::breaks_pretty(5)(wnd_range) wnd_range <- range(wnd_breaks)  poa_range <- range(poa_fl_y$POA.fl, poa_isl_y$POA.fl, poa_ken_y$POA.fl) poa_breaks <- scales::breaks_pretty(5)(poa_range) poa_range <- range(poa_breaks) # Plot capacity factor variable on map cf_plot <- function(   data, gis_sf, var_name, brakes,    labels = brakes, limits = range(brakes), legend_name = var_name,   viridis_palette = \"viridis\", border_colour = alpha(\"white\", .5),   legend_position = \"none\") {      ggplot() +   geom_sf(aes(fill = .data[[var_name]]), data = data) +   geom_sf(data = gis_sf, fill = NA, colour = border_colour) +   scale_fill_viridis_c(     breaks = brakes, labels = labels, limits = limits, name = legend_name,     option = viridis_palette) +   theme_bw() +      theme(legend.position = legend_position) +   theme(plot.margin = margin(0.5, 0.0, 0.0, 0.0, \"cm\")) +   labs(x = \"\", y = \"\")  }  # Combine plots into one plot_grid(   cf_plot(win_fl_y, florida_sf, \"win150af\", wnd_breaks),   cf_plot(win_isl_y, iceland_sf, \"win150af\", wnd_breaks),   cf_plot(win_ken_y, kenya_sf, \"win150af\", wnd_breaks,           legend_position = \"right\", legend_name = \"Wind\\nCF\"),   # NULL, NULL, NULL,     cf_plot(poa_fl_y, florida_sf, \"POA.fl\", poa_breaks, viridis_palette = \"plasma\"),   cf_plot(poa_isl_y, iceland_sf, \"POA.fl\", poa_breaks, viridis_palette = \"plasma\"),   cf_plot(poa_ken_y, kenya_sf, \"POA.fl\", poa_breaks, viridis_palette = \"plasma\",           legend_position = \"right\", legend_name = \"POA\\nkW/day\"),   # rel_heights = c(1, -.3, 1),   ncol = 3, rel_widths = c(1, 1.3, 1.17),   labels = c(\"Florida\", \"Iceland\", \"Kenya\"), hjust = c(-1.6, -1.9, -1.6) ) ggsave2(\"images/cf_group.png\", width = 8, height = 5, dpi = 200)"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"precipitation-by-months","dir":"Articles","previous_headings":"","what":"Precipitation by months","title":"Get started with `merra2ools`","text":"Precipitation month Kenya (2019), millimeters / hour (kg/m^2/hour)","code":"prec_ken_m <- merra_ken %>%   mutate(     local_time = lubridate::with_tz(UTC, \"Africa/Nairobi\"),     year = year(local_time),     month = month(local_time),     month_name = factor(month.name[month], levels = month.name, ordered = TRUE)) %>%   group_by(locid, year, month, month_name) %>%   summarise(     PRECTOTCORR = sum(PRECTOTCORR, na.rm = T),     T10M = mean(T10M),     .groups = \"drop\"     ) %>%   add_merra2_grid() pre_range <- range(prec_ken_m$PRECTOTCORR) pre_breaks <- scales::breaks_pretty(5)(pre_range) pre_range <- range(pre_breaks)  cf_plot(prec_ken_m, kenya_sf, \"PRECTOTCORR\", brakes = pre_breaks, legend_position = \"right\") +    facet_wrap(.~month)  ggplot(prec_ken_m) +   geom_sf(aes(fill = PRECTOTCORR)) +    scale_fill_distiller(palette = \"YlGnBu\", direction = 1, name = \"mm /\\nmonth\") +   facet_wrap(.~month_name) +    geom_sf(data = kenya_sf, fill = NA, colour = alpha(\"black\", .5)) +   theme_bw() + labs(x = \"\", y = \"\") ggsave(\"images/precipitation_m_kenya.png\", scale = 1.5, width = 5, height = 5)  ggplot(prec_ken_m) +   geom_sf(aes(fill = T10M)) +    scale_fill_distiller(palette = \"Spectral\", direction = -1, name = \"\\u00B0C\") +   facet_wrap(.~month_name) +    geom_sf(data = kenya_sf, fill = NA, colour = alpha(\"black\", .5)) +   theme_bw() ggsave(\"images/temperature_m_kenya.png\", scale = 1.5, width = 5, height = 5)"},{"path":"https://energyRt.github.io/merra2ools/articles/merra2ools.html","id":"air-temperature-by-months","dir":"Articles","previous_headings":"","what":"Air temperature by months","title":"Get started with `merra2ools`","text":"Average monthly temperature Kenya (2019), °C)","code":""},{"path":"https://energyRt.github.io/merra2ools/articles/roadmap.html","id":"version-0-1-0-initial-release-current","dir":"Articles","previous_headings":"","what":"✅ Version 0.1.0 – Initial Release (current)","title":"Development Status and Roadmap","text":"subset MERRA-2 dataset available data package fst format Data query functions access 41 years hourly MERRA-2 data (1980–2020) UTC locid Estimation hourly capacity factors wind solar based MERRA-2 indicators Support clustering locations using temporal correlation across neighboring cells","code":""},{"path":"https://energyRt.github.io/merra2ools/articles/roadmap.html","id":"planned-for-v0-2-0-data-access-optimization","dir":"Articles","previous_headings":"","what":"🚧 Planned for v0.2.0 – Data Access Optimization","title":"Development Status and Roadmap","text":"Integration arrow memory-efficient, -disk queries (full dataset load) Export functions preparing input data (supported) energy system models","code":""},{"path":"https://energyRt.github.io/merra2ools/articles/roadmap.html","id":"planned-for-v0-3-0-algorithm-review-validation","dir":"Articles","previous_headings":"","what":"📘 Planned for v0.3.0 – Algorithm Review & Validation","title":"Development Status and Roadmap","text":"Wind power output capacity factors (adjusted height, density, cut-/cut-) Solar power estimation different tracking/tilt assumptions Clustering methods spatial aggregation locations Publish methodology documentation example workflows Peer-review core methods validation external benchmarks","code":""},{"path":"https://energyRt.github.io/merra2ools/articles/roadmap.html","id":"planned-for-v0-4-0-publication-and-cran-release","dir":"Articles","previous_headings":"","what":"🚀 Planned for v0.4.0 – Publication and CRAN Release","title":"Development Status and Roadmap","text":"Prepare package CRAN submission (tests, checks, metadata cleanup) Complete pkgdown reference site articles function documentation Functions fetch data Data Driad /Zenodo time Functions fetch data MERRA-2 API directly Update datasets latest MERRA-2 data (2021–2024)","code":""},{"path":"https://energyRt.github.io/merra2ools/articles/roadmap.html","id":"future-ideas-v0-5-0","dir":"Articles","previous_headings":"","what":"💡 Future Ideas (v0.5.0+)","title":"Development Status and Roadmap","text":"Add support precipitation-based hydro inflow estimation Enable regional aggregation capacity factor mapping Interactive dashboards Shiny app data exploration Integration external models (e.g., energyRt, multimod) Visualization tools spatial data (e.g., ggplot2, leaflet) Writing mirror package Python /Julia wider accessibility","code":""},{"path":"https://energyRt.github.io/merra2ools/articles/roadmap.html","id":"contact","dir":"Articles","previous_headings":"","what":"Contact","title":"Development Status and Roadmap","text":"Collaborators sponsors please contact us via email SupportOpenSource@optimalsolution.dev.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://energyRt.github.io/merra2ools/articles/solarpower.html","id":"all-steps-at-once","dir":"Articles","previous_headings":"Plane of Array (POA) irradiance model","what":"All steps at once","title":"Solar Power","text":"","code":"library(merra2ools) library(merra2sample) # if (params$rebuild) library(merra2sample) library(tidyverse) library(cowplot) # Example dataset # merra <- merra2_sample(month = 1:12, add.coord = T) # Note: month = 1:12 requires ~64Gb of RAM #       one month (such as month = 3 or month = 1) requires ~10Gb or RAM merra <- merra2_sample(month = c(3, 6, 9, 12), add.coord = T) merra  x <- fPOA(merra) # keep.all = T - keeps all interim variables fig.POA <- function(x, name,                      legend.position = NULL,                      timestamp.position = NULL, ...) {   plot_merra(x, name = name, limits = c(0, 1200),             # legend.position = c(0.88, 0.05),             legend.position = legend.position,            legend.name = (\"W/\\u33A1\"),             timestamp.position = timestamp.position,            expand.x = c(0.002, 0.005), expand.y = c(0.002, 0.005)            ) } fig.POA(x, \"SWGDN\")  fig.POA.grid <- function(x,                           legend.position = c(0.81, 0.08),                           timestamp.position = c(125, 85),                           ...) {   plot_grid(     # fig.POA(x, \"SWGDN\", ...),      fig.POA(x, \"POA.fh\", ...),     fig.POA(x, \"POA.fl\", timestamp.position = timestamp.position, ...),      fig.POA(x, \"POA.th\", ...),      fig.POA(x, \"POA.tv\", ...),      fig.POA(x, \"POA.tl\", ...),     fig.POA(x, \"POA.td\", legend.position = legend.position, ...),     # fig.dPS(x),     labels = c( #\"GHI\",                 \"POA.fh\", \"POA.fl\",                 \"POA.th\", \"POA.tv\",                 \"POA.tl\", \"POA.td\"),     ncol = 2, nrow = 3, hjust = -0.1, vjust = 1.1, label_size = 12,     label_colour = \"black\") } fig.POA.grid(x)  ii <- rep(TRUE, nrow(x)) # ii <- lubridate::month(x$UTC) <= 1; summary(ii) gif_merra(x[ii,], FUN = \"fig.POA.grid\", dirname = \"images\", fps = 5,           gif.width = 1.25 * 576,           gif.height = 1.25 * 360 * 1.21,           filename.prefix = \"fig.POA.grid\")"},{"path":[]},{"path":"https://energyRt.github.io/merra2ools/articles/solarpower.html","id":"solar-position","dir":"Articles","previous_headings":"Plane of Array (POA) irradiance model > Step-by-step","what":"Solar position","title":"Solar Power","text":"","code":"x <- solar_position(merra, keep.all = T, integral_steps = 1) # x <- solar_position(merra, verbose = 0, keep.all = T) # x <- azimuth.convertion(x) x$na <- 1L; x$na[!x$beam] <- NA # drop nights  summary(x$beam) plot_merra(x, \"beam\", limits = c(0, 1), palette = \"YlGnBu\",            legend.name = \"\")  summary(x$declination) fig.declination <- function(x, limits = c(-.5, .5),                              legend.name = \"angle\\u00b0\",                              ...) {   plot_merra(x, \"declination\", limits = limits,               # palette = \"YlGnBu\",              legend.name = legend.name, ...) } fig.declination(x)  summary(x$eq_time) fig.eq_time <- function(x, limits = c(-15, 15), ...) {   plot_merra(x, \"eq_time\", limits = limits, palette = \"PRGn\",               legend.name = \"Munutes\", direction = -1, ...) } fig.eq_time(x)  summary(x$solar_time) fig.solar_time <- function(x, limits = c(-12, 36),             palette = \"Dark2\", legend.name = \"Hours\",             ...) {   plot_merra(x, \"solar_time\", limits = limits,               palette = palette, legend.name = legend.name, ...) } fig.solar_time(x)    summary(x$hour_angle) summary(rad2deg(x$hour_angle)) fig.hour_angle <- function(x, limits = c(-360, 360), scale = 180/pi,             palette = \"Set1\", legend.name = \"angle\\u00b0\",             direction = 1, ...) {   plot_merra(x, \"hour_angle\", limits = limits, scale = scale,              palette = palette, legend.name = legend.name, direction = direction, ...) } fig.hour_angle(x)  summary(x$zenith) fig.zenith <- function(x, ...) {   plot_merra(x, \"zenith\", limits = c(0, 90),               direction = 1,               scale = x$na,              palette = \"Blues\",               legend.name = \"angle\\u00b0\", ...) } fig.zenith(x)  summary(x$azimuth_N) fig.azimuth <- function(x, ...) {   plot_merra(x, \"azimuth_N\",               # limits = c(0, 360),              limits = c(-180, 180),               legend.name = \"angle\\u00b0\",              palette = \"Set1\",              # palette = \"Blues\",               scale = x$na, direction = -1, ...) } fig.azimuth(x)  fig.solar_postion <- function(x,                           legend.position = c(0.80, 0.08),                           timestamp.position = c(125, 85),                           ...) {   plot_grid(fig.declination(x, timestamp.position = NULL,                              legend.position = legend.position, ...),              fig.eq_time(x, timestamp.position = timestamp.position,                          legend.position = legend.position, ...),             fig.solar_time(x, timestamp.position = NULL,                             legend.position = legend.position, ...),              fig.hour_angle(x, timestamp.position = NULL,                             legend.position = legend.position, ...),             fig.zenith(x, timestamp.position = NULL,                         legend.position = legend.position, ...),              fig.azimuth(x, legend.position = legend.position,                          timestamp.position = NULL, ...),             # fig.dPS(x),             labels = c(\"declination\", \"eq_time\", \"solar_time\",                         \"hour_angle\", \"zenith\", \"azimuth_N\"),             ncol = 2, nrow = 3, hjust = -0.1, vjust = 1.1, label_size = 12,             label_colour = \"black\") } fig.solar_postion(x)  # ii <- lubridate::hour(x$UTC) <= 2; summary(ii) gif_merra(x, FUN = \"fig.solar_postion\", dirname = \"images\", fps = 5,           gif.width = 1.25 * 576,            gif.height = 1.25 * 360 * 1.21,            filename.prefix = \"fig.solar_postion_\")"},{"path":"https://energyRt.github.io/merra2ools/articles/solarpower.html","id":"global-horizontal-irradiance-decomposition","dir":"Articles","previous_headings":"Plane of Array (POA) irradiance model > Step-by-step","what":"Global Horizontal Irradiance decomposition","title":"Solar Power","text":"","code":"x <- ghi_decomposition(x, keep.all = T)  summary(x$ext_irrad) fig.ext_irrad <- function(x, ...) {   plot_merra(x, \"ext_irrad\", limits = c(1300, 1450), direction = 1,              palette = \"Oranges\", legend.name = \"W/\\u33A1\", ...) } fig.ext_irrad(x)  summary(x$clearness_index) fig.clearness_index <- function(x, ...) {   plot_merra(x, \"clearness_index\", limits = c(0, 1), direction = -1,               palette = \"Blues\", ...) } fig.clearness_index(x)  summary(x$diffuse_fraction) fig.diffuse_fraction <- function(x, ...) {   plot_merra(x, \"diffuse_fraction\", limits = c(0, 1), palette = \"Blues\",               direction = 1, ...) } fig.diffuse_fraction(x)  summary(x$DNI) fig.DNI <- function(x, ...) {   plot_merra(x, \"DNI\", legend.name = \"W/\\u33A1\", limits = c(0, 1200), ...) } fig.DNI(x)  summary(x$DHI) fig.DHI <- function(x, ...) {   plot_merra(x, \"DHI\", legend.name = \"W/\\u33A1\", limits = c(0, 1200), ...) } fig.DHI(x)  fig.ghi_decomposition <- function(x,                           legend.position = c(0.81, 0.09),                           timestamp.position = c(125, 85),                           ...) {   plot_grid(fig.POA(x, \"SWGDN\", timestamp.position = NULL,                     legend.position = NULL,                      limits = c(0, 1200), ...),             fig.ext_irrad(x, timestamp.position = timestamp.position,                            legend.position = legend.position, ...),              fig.clearness_index(               x, timestamp.position = NULL,                legend.position = NULL, ...),             fig.diffuse_fraction(x, timestamp.position = NULL,                             legend.position = legend.position, ...),              fig.DNI(x, timestamp.position = NULL,                             legend.position = NULL, ...),             fig.DHI(x, timestamp.position = NULL,                         legend.position = legend.position, ...),              # fig.azimuth(x, legend.position = legend.position,              #             timestamp.position = NULL, ...),             # # fig.dPS(x),             labels = c(\"GHI\", \"ext_irrad\", \"clearness_index\",                         \"diffuse_fraction\", \"DNI\", \"DHI\"),             ncol = 2, nrow = 3, hjust = -0.1, vjust = 1.1, label_size = 12,             label_colour = \"black\") } fig.ghi_decomposition(x)  gif_merra(x, FUN = \"fig.ghi_decomposition\", dirname = \"images\", fps = 5,           gif.width = 1.25 * 576,            gif.height = 1.25 * 360 * 1.21,            filename.prefix = \"fig.ghi_decomposition_\")"},{"path":"https://energyRt.github.io/merra2ools/articles/solarpower.html","id":"pv-array-position","dir":"Articles","previous_headings":"Plane of Array (POA) irradiance model > Step-by-step","what":"PV-array position","title":"Solar Power","text":"","code":"x <- pv_array_position(x, array.type = \"all\") x  # convert azimuth from \"Q\" to \"N\" for figures x <- merra2ools:::azimuth_Q2N(x,   paste0(\"array.azimuth_Q.\", pv_array_types()[,1]),   paste0(\"array.azimuth_N.\", pv_array_types()[,1]))   fig.array.tilt <- function(x, array.type = \"fl\", ...) {   plot_merra(x, paste0(\"array.tilt.\", array.type), limits = c(0, 90),               palette = \"Spectral\", direction = -1, ...) }  fig.array.azimuth <- function(x, array.type = \"fl\", azimuth.suffix = \"_N\",                               limits = c(0, 360), ...) {   plot_merra(x,  paste0(\"array.azimuth\", azimuth.suffix, \".\", array.type),               limits = limits, # c(0, 360)              # limits = c(-180, 180),               direction = -1, palette = \"Set1\", ...) }  summary(x$array.tilt.fh); summary(x$array.azimuth.fh) fig.array.tilt(x, \"fh\") fig.array.azimuth(x, \"fh\") fig.array.azimuth(x, \"fh\", azimuth.suffix = \"_Q\")   summary(x$array.tilt.fl); summary(x$array.azimuth.fl) fig.array.tilt(x, \"fl\") fig.array.azimuth(x, \"fl\")  summary(x$array.tilt.th); summary(x$array.azimuth.th) fig.array.tilt(x, \"th\") fig.array.azimuth(x, \"th\", scale = x$na)  summary(x$array.tilt.tl); summary(x$array.azimuth.tl) fig.array.tilt(x, \"tl\") fig.array.azimuth(x, \"tl\", scale = x$na)  summary(x$array.tilt.tv); summary(x$array.azimuth.tv) fig.array.tilt(x, \"tv\") fig.array.azimuth(x, \"tv\", scale = x$na)  summary(x$array.tilt.td); summary(x$array.azimuth.td) fig.array.tilt(x, \"td\") fig.array.azimuth(x, \"td\", scale = x$na) fig.array.azimuth(x, \"td\", azimuth.suffix = \"\")  fig.array.tilt.grid <- function(   x, legend.position = c(0.81, 0.08),    timestamp.position = c(125, 85), ...) {   plot_grid(     fig.array.tilt(x, \"fh\", timestamp.position = NULL, legend.position = NULL,                    scale = x$na, ...),     fig.array.tilt(x, \"fl\", timestamp.position = timestamp.position,                    legend.position = NULL, scale = x$na, ...),     fig.array.tilt(x, \"th\", scale = x$na,                     timestamp.position = NULL, legend.position = NULL, ...),      fig.array.tilt(x, \"tv\", scale = x$na,                    timestamp.position = NULL, legend.position = NULL, ...),     fig.array.tilt(x, \"tl\", scale = x$na,                    timestamp.position = NULL, legend.position = NULL, ...),     fig.array.tilt(x, \"td\", scale = x$na,                    timestamp.position = NULL,                    legend.position = legend.position, ...),   labels = c(\"fh\", \"fl\", \"th\", \"tv\", \"tl\",\"td\"),             ncol = 2, hjust = -0.1, vjust = 1.1, label_size = 12,             label_colour = \"#fdf8db\") }  ii <- x$hour == 12 b <- fig.array.tilt.grid(x[ii,], legend.position = c(0.81, 0.12)) ggsave(\"images/fig.array.tilt.grid.png\", b, width = 7, height = 10.5/2)  gif_merra(x, FUN = \"fig.array.tilt.grid\",            dirname = \"images\", fps = 5,           gif.width = 1.25 * 576,            gif.height = round(1.25 * 360 * 1.21),            filename.prefix = \"fig.array.tilt.grid_\")  fig.array.azimuth.grid <- function(   x, legend.position = c(0.81, 0.08),    timestamp.position = c(125, 85), ...) {   plot_grid(     fig.array.azimuth(x, \"fh\",                        timestamp.position = NULL, legend.position = NULL,                        scale = x$na, ...),     fig.array.azimuth(x, \"fl\", timestamp.position = timestamp.position,                        legend.position = NULL,                       scale = x$na, ...),     fig.array.azimuth(x, \"th\",  scale = x$na,                        timestamp.position = NULL, legend.position = NULL, ...),     fig.array.azimuth(x, \"tv\", scale = x$na,                        timestamp.position = NULL, legend.position = NULL, ...),     fig.array.azimuth(x, \"tl\",  scale = x$na,                       timestamp.position = NULL, legend.position = NULL, ...),     fig.array.azimuth(x, \"td\", scale = x$na, timestamp.position = NULL,                        legend.position = legend.position, ...),   labels = c(\"fh\", \"fl\", \"th\", \"tv\", \"tl\",\"td\"),             ncol = 2, hjust = -0.1, vjust = 1.1, label_size = 12,             label_colour = \"#fdf8db\") }  ii <- x$hour == 12 b <- fig.array.azimuth.grid(x[ii,], legend.position = c(0.81, 0.12)) ggsave(\"images/fig.array.azimuth.grid.png\", b,         width = 7, height = 10.5/2)  gif_merra(x, FUN = \"fig.array.azimuth.grid\",            dirname = \"images\", fps = 5,           gif.width = 1.25 * 576,            gif.height = round(1.25 * 360 * 1.21),            filename.prefix = \"fig.array.azimuth_N.grid_\")  gif_merra(x, FUN = \"fig.array.azimuth.grid\",            azimuth.suffix = \"_Q\", limits = c(-180, 180),           dirname = \"images\", fps = 5,           gif.width = 1.25 * 576,            gif.height = round(1.25 * 360 * 1.21),            filename.prefix = \"fig.array.azimuth_Q.grid_\")"},{"path":"https://energyRt.github.io/merra2ools/articles/solarpower.html","id":"angle-of-incidence-aoi","dir":"Articles","previous_headings":"Plane of Array (POA) irradiance model > Step-by-step","what":"Angle of Incidence (AOI)","title":"Solar Power","text":"","code":"x <- angle_of_incidence(x, array.type = \"all\")  fig.AOI <- function(x, array.type = \"fl\", ...) {   plot_merra(x, paste0(\"AOI.\", array.type), limits = c(0, 90),               direction = 1,               # palette = \"Blues\",               palette = \"Set1\",               legend.name = \"angle\\u00b0\",              scale = 180/pi, ...) } summary(x$AOI.fh); summary(rad2deg(x$AOI.fh)) fig.AOI(x, \"fh\")  summary(rad2deg(x$AOI.fl)) fig.AOI(x, \"fl\")  summary(rad2deg(x$AOI.th)) fig.AOI(x, \"th\")  summary(rad2deg(x$AOI.tl)) fig.AOI(x, \"tl\")  summary(rad2deg(x$AOI.tv)) fig.AOI(x, \"tv\")  summary(rad2deg(x$AOI.td)) fig.AOI(x, \"td\")  fig.AOI.grid <- function(x,                           legend.position = c(0.81, 0.08),                           timestamp.position = c(125, 85),                           ...) {   plot_grid(     fig.AOI(x, \"fh\", timestamp.position = NULL,              legend.position = NULL, ...),      fig.AOI(x, \"fl\", timestamp.position = timestamp.position,              legend.position = NULL, ...),     fig.AOI(x, \"th\", timestamp.position = NULL,              legend.position = NULL, ...),      fig.AOI(x, \"tv\", timestamp.position = NULL,              legend.position = NULL, ...),      fig.AOI(x, \"tl\", timestamp.position = NULL,             legend.position = NULL, ...),     fig.AOI(x, \"td\", legend.position = legend.position,              timestamp.position = NULL, ...),             # fig.dPS(x),             labels = c(\"AOI - fh\", \"AOI - fl\",                         \"AOI - th\", \"AOI - tv\",                        \"AOI - tl\", \"AOI - td\"),             ncol = 2, nrow = 3, hjust = -0.1, vjust = 1.1, label_size = 12,             label_colour = \"#fdf8db\") } ii <- x$hour == 12 a <- fig.AOI.grid(x[ii,], legend.position = c(0.78, .12)) ggsave(\"images/fig.AOI.grid_int2.png\", a, width = 8, height = 6)  gif_merra(x, FUN = \"fig.AOI.grid\", dirname = \"images\", fps = 5,           gif.width = 1.25 * 576,            gif.height = round(1.25 * 360 * 1.21),            filename.prefix = \"fig.AOI.grid_\")"},{"path":"https://energyRt.github.io/merra2ools/articles/solarpower.html","id":"plane-of-array-poa-irradiance","dir":"Articles","previous_headings":"Plane of Array (POA) irradiance model > Step-by-step","what":"Plane of Array (POA) irradiance","title":"Solar Power","text":"","code":"x <- poa_irradiance(x, array.type = \"all\", keep.all = T) fig.POA.grid(x)  # ggsave(\"images/poa_by_type.png\", width = 7, height = 8.)"},{"path":"https://energyRt.github.io/merra2ools/articles/solarpower.html","id":"validation-comparison-with-nrels-pvwatts-model-estimates","dir":"Articles","previous_headings":"Plane of Array (POA) irradiance model > Step-by-step","what":"Validation: comparison with NREL’s PVWAtts model estimates","title":"Solar Power","text":"Fetching POA estimates NREL’s PVWatts POA figures Getting MERRA-2 data locations Estimating POA MERRA-2 data Compare PVWatts MERRA-2 estimates  See https://github.com/energyRt/merra2ools/tree/master/vignettes/images/poa_pvwatts_merra comparison locations.","code":"st_id <- merra2ools::pvwatts_stations_sample # Fetching the data from PVWAtts in select locations if (!file.exists(\"tmp/pvwatts_poa_db.RData\")) {   ll <- list()   for (tp in c(\"fh\", \"fl\", \"th\", \"tv\", \"tl\", \"td\")) {     for (i in 1:nrow(st_id)) {       x <- fetch_pvwatts(         array.type = tp,         lon = st_id$lon_stn[i],         lat = st_id$lat_stn[i],         # tilt = abs(st_id$lat[i]),         # tilt = 0,         azimuth = ifelse(st_id$lat_stn[i] < 0, 0, 180),         radius = 100       )       cat(\"type = \", tp, \", i = \", i, \", lon = \",            st_id$lon_stn[i], \", lat = \", st_id$lat_stn[i],            \", poa: \", length(x$outputs$poa), \"\\n\", sep = \"\")       nm <- paste(tp, i, sep = \"_\")       ll[[nm]] <- x       if (!is.null(x$error$code)) {         if (x$error$code == \"OVER_RATE_LIMIT\") break       }     }     if (!is.null(x$error$code)) {       if (x$error$code == \"OVER_RATE_LIMIT\") break     }   }   names(ll)   save(ll, st_id, file = \"tmp/pvwatts_poa_full_list.RData\") #'raw' data  # Merging hourly POA (PVWatts) ####   yday_hour <- expand.grid(hour = 1:24, yday = 1:365) %>% as_tibble()   for (i in 1:length(ll)) {     n <- names(ll)[i]     cat(n); cat(\" \")     x <- sapply(ll[[i]]$outputs, unlist)     x <- try(       as_tibble(x[5:15]) %>%         mutate(           # request = i,           lon_stn = ll[[i]]$station_info$lon,           lat_stn = ll[[i]]$station_info$lat,           lonlat = paste0(\"(\", round(lon_stn, 2), \", \", round(lat_stn, 2), \")\"),           elev = ll[[i]]$station_info$elev,           tz = ll[[i]]$station_info$tz,            month = yday2month(yday_hour$yday),           yday = as.integer(yday_hour$yday),           hour = as.integer(yday_hour$hour) - 1,           # lon_inp = as.numeric(ll[[i]]$inputs$lat),           # lat_inp = as.numeric(ll[[i]]$inputs$lon),           # module_type = as.integer(ll[[i]]$inputs$module_type),           # losses = as.numeric(ll[[i]]$inputs$losses),           # id = as.integer(gsub(\"[a-z_]\", \"\", i)),           array.type = substr(n, 1, 2),           # array_type_pvwatts = ll[[i]]$inputs$array_type,           tilt = as.numeric(ll[[i]]$inputs$tilt),           azimuth = as.numeric(ll[[i]]$inputs$azimuth),           .before = ac_annual), silent = T     )     if (i ==  1 || !exists(\"db\") || is.null(db)) {       db <- NULL       if (all(class(x) != \"try-error\")) db <- x     } else {       if (all(class(x) != \"try-error\")) db <- bind_rows(db, x)     }   }   db    db %>% as.data.table()   dim(db)      db <- right_join(select(st_id, locid, lonlat), db)   save(db, file = \"tmp/pvwatts_poa_db.RData\") } else {   # loading pre-saved data   (load(\"tmp/pvwatts_poa_db.RData\")) }      db$array.type[db$array.type == \"tv\"] <- \"tl\"   # summarizing the data for comparison db_m <- db %>%    group_by(lonlat, locid, month, hour, array.type) %>%   summarise(poa = max(poa, na.rm = T)) %>%   mutate(month = factor(month.abb[month], levels = month.abb, ordered = T),          data = factor(\"PVWatts\", levels = c(\"merra2ools\", \"PVWatts\"), ordered = T)) %>%   ungroup() # Plot POA for select (random) locations #### set.seed(0) ii <- db_m$lonlat %in% sample(unique(db_m$lonlat), 4) &   db_m$month %in% c(\"Mar\", \"Jul\", \"Oct\", \"Dec\"); summary(ii)  ggplot(db_m[ii,]) +   geom_line(aes(hour, poa, colour = array.type, linetype = array.type), size = 1) +   scale_color_brewer(palette = \"Set1\", name = \"Array type\") +   guides(colour = guide_legend(override.aes = list(linetype = 1:5))) +   scale_linetype(guide = FALSE) +   facet_grid(lonlat ~ month) +    labs(y = \"POA irradiance, Watt/m2\", x = \"Hour, local time\") +   theme_bw()  ggplot(db_m[ii,]) +   geom_line(aes(hour, poa, colour = month), size = 1) +   scale_color_brewer(palette = \"Set1\", name = \"Month\") +   facet_grid(lonlat ~ array.type) +    labs(y = \"POA irradiance, Watt/m2\", x = \"Hour, local time\") +   theme_bw() merra0 <- get_merra2_subset(locid = st_id$locid,                              from = \"2009-01-01 00\",                              to = \"2011-12-31 23\") merra0 x <- merra0 %>% fPOA(keep.all = T) x <- mutate(x,              month = month(UTC),             month = factor(month.abb[month], levels = month.abb, ordered = T)) %>%   group_by(locid, month, hour) %>%   summarise(     POA.fh = max(POA.fh, na.rm = T),     POA.fl = max(POA.fl, na.rm = T),     POA.th = max(POA.th, na.rm = T),     POA.tl = max(POA.tl, na.rm = T),     POA.tv = max(POA.tv, na.rm = T),     POA.td = max(POA.td, na.rm = T)     # SWGDN = max(SWGDN, na.rm = T)   ) %>%   ungroup() %>% #select(-lon, -lat) %>%   left_join(select(st_id, locid, tz_stn)) %>%   mutate(hour = hour_utc2tz(hour, tz_offset = tz_stn)) %>%   select(-tz_stn) %>%   mutate(data = factor(\"merra2ools\", levels = c(\"merra2ools\", \"PVWatts\"), ordered = T)) %>%   pivot_longer(cols = starts_with(\"POA.\"), names_to = \"array.type\", values_to = \"poa\") %>%   mutate(array.type = sub(\"POA.\", \"\", array.type)) x db_m[,-1]  if (F) { # interim check - POA figure based on MERRA-2   jj <- x$locid == sample(x$locid, 1)   xx <- left_join(x[jj,], select(st_id, locid, lonlat))   ggplot(xx) +     geom_line(aes(hour, poa, colour = array.type), size = 1) +     # facet_grid(month~id) +     facet_wrap(~month) +     theme_bw() +     labs(title = paste0(\"PVWatts station coord \",                          unique(xx$lonlat),                          \", MERRA-2 locid = \", unique(xx$locid))) } y <- bind_rows(   select(db_m, data, locid, month, hour, array.type, poa),    select(x, data, locid, month, hour, array.type, poa)) %>%   left_join(st_id[, c(\"locid\", \"lonlat\")]) %>%   add_coord() %>% ungroup() %>%   mutate(locid_lonlat = paste0(locid, \" (\", lon, \", \", lat, \")\")) %>%   as.data.table() %>%   select(-lon, -lat)  fig.PVWatts_MERRA <- function(x, lid = NULL) {   lids <- unique(x$locid)   if (length(lids) > 1) {     if (is.null(lid)) {lid <- sample(lids, 1)}   }      if (!is.null(lid)) {     ii <- x$locid %in% lid   } else {     ii <- rep(TRUE, nrow(x))   }   ggplot(x[ii,]) +     geom_line(aes(hour, poa, colour = data), size = 1) +     facet_grid(month ~ array.type) +     theme_bw() +     scale_color_viridis_d(name = \"\") +     theme(       legend.position = \"bottom\",           legend.margin = margin(0,0,0,0),           legend.box.margin = margin(-10,0,0,0),           plot.margin = unit(c(0,0,0,0), \"mm\"),           plot.title = element_text(hjust = 0.5),           axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +     guides(colour = guide_legend(nrow = 1)) +     labs(title = paste0(\"PVWatts station coord \", unique(x[ii,]$lonlat),                          \"; MERRA-2 locid = \", unique(x[ii,]$locid)),          x = \"Hour\", y = \"POA, Watt/m2, monthly maximum for every hour\") } fig.PVWatts_MERRA(y)  lids <- unique(y$locid) %>% sort() fld <- \"images/poa_pvwatts_merra\" if (!dir.exists(fld)) dir.create(fld, recursive = T) for (i in lids) {   if (i == lids[1]) cat(\"locid: \")   cat(i, \"\")   gg <- fig.PVWatts_MERRA(y, i)   fname <- paste0(\"poa_pvwatts_vs_merra2_locid_\", formatC(i, width = 6, flag = \"0\"), \".png\")   ggsave(file.path(fld, fname), gg, width = 6, height = 8, units = \"in\") }"},{"path":"https://energyRt.github.io/merra2ools/articles/solarpower.html","id":"refferences","dir":"Articles","previous_headings":"Plane of Array (POA) irradiance model","what":"Refferences","title":"Solar Power","text":"…","code":""},{"path":[]},{"path":"https://energyRt.github.io/merra2ools/articles/windpower.html","id":"hellmann-constant","dir":"Articles","previous_headings":"Wind speed extrapolation","what":"Hellmann constant","title":"Wind Power","text":"MERRA-2 subset estimated Hellmann exponent (h) Distribution Hellmann constant, estimated MERRA-2 sample","code":"dat <- merra2_mar %>%   select(-SWGDN,    -ALBEDO) %>% # drop solar radiation   mutate(h = fH(W10M = W10M, W50M = W50M)) # Hellmann constant  summary(dat$h) # check basic statistics #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> 0.00000 0.05406 0.08197 0.12715 0.16302 0.60000 (h_mean = mean(dat$h)) #> [1] 0.1271491 (h_median = median(dat$h)) #> [1] 0.08197119  # .GeomVline_draw_key <- GeomVline$draw_key GeomVline$draw_key <- GeomHline$draw_key # adjusting legend  fig <- ggplot(dat) +   geom_histogram(aes(h, after_stat(density),                       fill = \"Hellmann\", colour = \"NA\"),                  alpha = .75, show.legend = F, bins = 50) +   labs(x = \"Hellmann exponent (h)\") +   geom_vline(aes(xintercept = x, linetype = name),              data = tibble(name = c(\"mean\", \"median\"),                            x = c(h_mean, h_median)),              colour = \"blue\") +   scale_linetype(name = \"Statistics\") +   theme_bw() +    theme(legend.position = c(0.9, .8),         legend.box.background = element_rect(           colour = \"black\", fill = \"grey\"           )) #> Warning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2 #> 3.5.0. #> ℹ Please use the `legend.position.inside` argument of `theme()` instead.d. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://energyRt.github.io/merra2ools/articles/windpower.html","id":"extrapolation","dir":"Articles","previous_headings":"Wind speed extrapolation","what":"Extrapolation","title":"Wind Power","text":"Figure shows sample extrapolated speed wind 10 50 200 meters height. Wind speed extrapolation using estimated Hellmann constant.","code":"# extrapolation for (i in seq(10, 200, 10)) {   if (i == 10) cat(\"Height, m: \")   cat(i)   dat[[paste0(\"w\", i)]] <- fWSE(i, dat$W10M, dat$h)   cat(\" \") } #> Height, m: 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 dd <- dat %>% ungroup() %>%   select(UTC, locid, starts_with(\"w\", ignore.case = F)) %>%   pivot_longer(cols = starts_with(\"w\"), names_prefix = \"w\") %>%   mutate(name = as.integer(name))  set.seed(0) fig <- ggplot(filter(dd, locid %in% sample(locid, 100), UTC == dd$UTC[1])) +   geom_line(aes(value, name, group = locid, colour = locid),              alpha = .75, show.legend = F, size = .75) +   scale_colour_distiller(palette = \"Spectral\") +   geom_hline(yintercept = 10, linetype = \"dashed\", colour = \"blue\", alpha = 1) +    geom_hline(yintercept = 50, linetype = \"dashed\", colour = \"blue\", alpha = 1) +   # ylim(0, NA) +   labs(x = \"Wind speed, m/s\", y = \"Height, m\") +   scale_x_continuous(expand = c(0,0)) +    scale_y_continuous(expand = c(0,0), limits = c(0, NA),                       breaks = c(0, 10, 50, 100, 150, 200),                      minor_breaks = c(0, 10, seq(25, 200, by = 25)),                      labels = c(0, 10, 50, 100, 150, 200)) +   geom_text(data = tibble(name = c(\"wind speed at 10m from MERRA-2 (W10M)\",                                     \"wind speed at 10m from MERRA-2 (W50M)\"),                            x = c(19.2, 19.2), y = c(11, 51)),                           size = 3, colour = \"black\", alpha = .85,              aes(x, y, label = name), vjust = 0, hjust = 1) +              # nudge_x = 0.25, nudge_y = 7) +   theme_bw() #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead.d. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://energyRt.github.io/merra2ools/articles/windpower.html","id":"wind-speed-at-50m","dir":"Articles","previous_headings":"Wind speed extrapolation","what":"Wind speed at 50m","title":"Wind Power","text":"Wind speed 50 meters height, m/s","code":"locid <- merra2ools::locid %>% select(locid, lon, lat)  dat2 <- select(dat, UTC, locid, w10, w50, w100, w200) %>%   full_join(locid) #> Joining with `by = join_by(locid)`"},{"path":"https://energyRt.github.io/merra2ools/articles/windpower.html","id":"wind-power-curve","dir":"Articles","previous_headings":"","what":"Wind power curve","title":"Wind Power","text":"Simplified wind power curve","code":"# Simplified wind power curve wpc <- tibble(    mps = c(0:25, NA, 25.01, 26:30), # wind speed m/s   af = fWPC(mps) # availability factor [0,1] )  fig <- ggplot(wpc) +    geom_line(aes(x = mps, y = af, colour = \"red\"), size = 2, show.legend = F) +   labs(x = \"Wind speed, m/s\",         y = \"Wind turbine availability (capacity) factor\") +   theme_bw() #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"https://energyRt.github.io/merra2ools/articles/windpower.html","id":"estimated-hourly-availabillity-factor","dir":"Articles","previous_headings":"","what":"Estimated hourly availabillity factor","title":"Wind Power","text":"Hourly capacity factor generic wind turbine 50 meters hub height.","code":"dat2 <- mutate(   dat2,   af10 = fWPC(w10),   af50 = fWPC(w50),   af100 = fWPC(w100),   af200 = fWPC(w200) )  summary(dat2$w50); summary(dat2$af50) summary(dat2$af50[dat2$w50 > 25])  plot_merra(dat2, \"w50\", 1, map.border = NA) plot_merra(dat2, \"af50\", 1, limits = c(0, 1),            palette = \"Blues\", direction = 1, legend.name = \"AF\") plot_merra(dat2, \"af10\", 1, limits = c(0, 1),           palette = \"Blues\", direction = 1, legend.name = \"AF\") plot_merra(dat2, \"af100\", 1, limits = c(0, 1),           palette = \"Blues\", direction = 1, legend.name = \"AF\") plot_merra(dat2, \"af200\", 1, limits = c(0, 1),            palette = \"Blues\", direction = 1, legend.name = \"AF\")  gif_merra(dat2, \"af50\", 1, limits = c(0, 1), fps = 12,           palette = \"PuBu\", direction = 1,          legend.name = \"AF\",          filename = \"merra_wind_af50_12fps.gif\")"},{"path":"https://energyRt.github.io/merra2ools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Oleg Lugovoy. Author, maintainer. Shuo Gao. Author.","code":""},{"path":"https://energyRt.github.io/merra2ools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lugovoy O, Gao S (2025). merra2ools: R-tools process MERRA-2 data (NASA) focus renewable energy. R package version 0.1.05, https://optimal2050.github.io/merra2ools/.","code":"@Manual{,   title = {merra2ools: R-tools to process MERRA-2 data (NASA) with focus on renewable energy},   author = {Oleg Lugovoy and Shuo Gao},   year = {2025},   note = {R package version 0.1.05},   url = {https://optimal2050.github.io/merra2ools/}, }"},{"path":[]},{"path":"https://energyRt.github.io/merra2ools/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://energyRt.github.io/merra2ools/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://energyRt.github.io/merra2ools/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://energyRt.github.io/merra2ools/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://energyRt.github.io/merra2ools/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement SupportOpenSource@optimalsolution.dev. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://energyRt.github.io/merra2ools/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://energyRt.github.io/merra2ools/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://energyRt.github.io/merra2ools/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://energyRt.github.io/merra2ools/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://energyRt.github.io/merra2ools/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://energyRt.github.io/merra2ools/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://energyRt.github.io/merra2ools/index.html","id":"merra2ools-","dir":"","previous_headings":"","what":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","title":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","text":"merra2ools R package dataset evaluating potential output variable energy resources (VER) — specifically wind solar — globally, using 40 years hourly MERRA-2 reanalysis data. dataset assembled, package initially developed, support authors’ internal collaborative energy modeling studies, made available public use. development guided needs related research projects contributions broader community. See {dev-status} details.","code":""},{"path":"https://energyRt.github.io/merra2ools/index.html","id":"purpose","dir":"","previous_headings":"","what":"Purpose","title":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","text":"primary goal merra2ools provide energy modelers analysts : - curated, long-term subset MERRA-2 data relevant energy modeling. - toolkit estimating hourly potential output capacity factors wind solar energy. - Basic support hydro power output potential using precipitation surface runoff indicators.","code":""},{"path":"https://energyRt.github.io/merra2ools/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","text":"Access global, multi-decade MERRA-2 dataset compressed efficient use. Scaled rounded time series data stored compressed integers reduce storage preserving relevant signal. Functions estimate capacity factors potential output across regions time.","code":""},{"path":"https://energyRt.github.io/merra2ools/index.html","id":"data--compression","dir":"","previous_headings":"","what":"Data & Compression","title":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","text":"merra2ools dataset includes 41-year (1980–2020) hourly time series selected indicators NASA MERRA-2 reanalysis dataset. data preprocessed, scaled, compressed reduce file size preserving sufficient accuracy renewable energy modeling. data downloadable Dryad cloud repository. sample data can installed merra2sample package.","code":""},{"path":"https://energyRt.github.io/merra2ools/index.html","id":"index-columns","dir":"","previous_headings":"Data & Compression","what":"Index columns","title":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","text":"record indexed : UTC — Hourly timestamp Coordinated Universal Time (UTC) locid — Location ID (integer 1 207,936, corresponding MERRA-2 grid cells)","code":""},{"path":[]},{"path":"https://energyRt.github.io/merra2ools/index.html","id":"compression","dir":"","previous_headings":"Data & Compression","what":"Compression","title":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","text":"values stored scaled integers reduce size maintaining numerical usability. Files compressed using high-efficiency format (e.g., fst potential conversion parquet, custom binary) keep total dataset 300 GB. Partial data loading supported, allowing users work necessary time periods variables.","code":""},{"path":"https://energyRt.github.io/merra2ools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","text":"Download datasets https://doi.org/10.5061/dryad.v41ns1rtt local folder. required download data, suggested download least one full year (12 months). See Get started article (call vignette(\"merra2ools\", package = \"merra2ools\")) details.","code":"# install.packages(\"pak\") # if not installed pak::pkg_install(\"optimal2050/merra2ools\") # install the package pak::pkg_install(\"optimal2050/merra2sample\") # optional - example dataset library(merra2ools) # link the package with the downloaded data set_merra2_options(merra2.dir = \"PATH TO THE DOWNLOADED DATA\") get_merra2_dir()  # check if the path is saved check_merra2(detailed = T)"},{"path":"https://energyRt.github.io/merra2ools/index.html","id":"example-data","dir":"","previous_headings":"","what":"Example data","title":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","text":"package reproduces basic algorithms solar geometry, irradiance decomposition, Plane--Array models different types solar PV trackers. See Solar Power article (callvignette(\"solarpower\", package = \"merra2ools\")) details.  package includes basic algorithms estimating wind power potential capacity factors. uses MERRA-2 wind speed 10 50 meters ground level (AGL) extrapolate wind speed higher altitudes estimates wind power potential based given wind power curves. See Wind Power article (call vignette(\"windpower\", package = \"merra2ools\")) details.  See MERRA-2 subset article (call vignette(\"merra2\", package = \"merra2ools\")) complete list included time series detailed description dataset.","code":""},{"path":"https://energyRt.github.io/merra2ools/index.html","id":"data-movies","dir":"","previous_headings":"","what":"Data movies","title":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","text":"Youtube channel merra2ools features visualization 40 years hourly (60 h/s) wind speed using merra2ools package. Click image watch wind speed visualization demo YouTube.","code":""},{"path":"https://energyRt.github.io/merra2ools/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","text":"welcome contributions merra2ools package! Please see Contributing Guidelines details get involved. simply open issue, pull request, feature request GitHub.","code":""},{"path":"https://energyRt.github.io/merra2ools/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","text":"package licensed GNU Affero General Public License v3.0. data available CC0 1.0 Universal (CC0 1.0) Public Domain Dedication.","code":""},{"path":"https://energyRt.github.io/merra2ools/index.html","id":"citing-merra2ools","dir":"","previous_headings":"","what":"Citing merra2ools","title":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","text":"Lugovoy, O., & Gao, S. (2023). merra2ools: Satellite data tools retrospective assessment renewable energy production (R package version 0.1.05). Available : https://optimal2050.github.io/merra2ools/ solar PV performance estimation module merra2ools reproduces core elements modeling approach described Solar PV Performance Modeling Collaborative (PVPMC).","code":""},{"path":"https://energyRt.github.io/merra2ools/index.html","id":"citing-merra-2-data","dir":"","previous_headings":"","what":"Citing MERRA-2 Data","title":"R-tools to process MERRA-2 data (NASA) with focus on renewable energy","text":"Gelaro, R., et al. (2017). Modern-Era Retrospective Analysis Research Applications, Version 2 (MERRA-2). Journal Climate, 30(14), 5419–5454. https://doi.org/10.1175/JCLI-D-16-0758.1 Bosilovich, M. G., Lucchesi, R., & Suarez, M. (2016). MERRA-2: File Specification. GMAO Office Note . 9 (Version 1.1), 73 pp. Available : http://gmao.gsfc.nasa.gov/pubs/office_notes NASA Global Modeling Assimilation Office (GMAO). MERRA-2: Modern-Era Retrospective analysis Research Applications, Version 2. Available : https://gmao.gsfc.nasa.gov/reanalysis/merra-2/ Global Modeling Assimilation Office (GMAO) (2015), MERRA-2 tavg1_2d_rad_Nx: 2d, 1-Hourly, Time-Averaged, Single-Level, Assimilation, Radiation Diagnostics, 0.625 x 0.5 degree, V5.12.4 (M2T1NXRAD) GES DISC. Accessed: 2019–2020. DOI: 10.5067/Q9QMY5PBNV1T Global Modeling Assimilation Office (GMAO) (2015), MERRA-2 tavg1_2d_slv_Nx: 2d, 1-Hourly, Time-Averaged, Single-Level, Assimilation, Single-Level Diagnostics, V5.12.4 (M2T1NXSLV) GES DISC. Accessed: 2019–2020. DOI: 10.5067/VJAFPLI1CSIV","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://energyRt.github.io/merra2ools/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"https://energyRt.github.io/merra2ools/reference/add_coord.html","id":null,"dir":"Reference","previous_headings":"","what":"Add longitude and latitude of 'locid' — add_coord","title":"Add longitude and latitude of 'locid' — add_coord","text":"Add longitude latitude 'locid'","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/add_coord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add longitude and latitude of 'locid' — add_coord","text":"","code":"add_coord(x, replace = FALSE)"},{"path":"https://energyRt.github.io/merra2ools/reference/add_coord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add longitude and latitude of 'locid' — add_coord","text":"x data.frame `locid` column. replace logical, TRUE, existing `lon` `lat` columns `x` replaced.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/add_coord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add longitude and latitude of 'locid' — add_coord","text":"`x` added/replaced `lon` `lat` `locid`","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/add_coord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add longitude and latitude of 'locid' — add_coord","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/add_merra2_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds MERRA2 grid (polygons) to the data — add_merra2_grid","title":"Adds MERRA2 grid (polygons) to the data — add_merra2_grid","text":"Adds MERRA2 grid (polygons) data","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/add_merra2_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds MERRA2 grid (polygons) to the data — add_merra2_grid","text":"","code":"add_merra2_grid(x)"},{"path":"https://energyRt.github.io/merra2ools/reference/add_merra2_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds MERRA2 grid (polygons) to the data — add_merra2_grid","text":"x data.frame `locid` column","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/add_merra2_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds MERRA2 grid (polygons) to the data — add_merra2_grid","text":"`x` `sf` object, added geometry (polygons)","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/add_merra2_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds MERRA2 grid (points) to the data — add_merra2_points","title":"Adds MERRA2 grid (points) to the data — add_merra2_points","text":"Adds MERRA2 grid (points) data","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/add_merra2_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds MERRA2 grid (points) to the data — add_merra2_points","text":"","code":"add_merra2_points(x)"},{"path":"https://energyRt.github.io/merra2ools/reference/add_merra2_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds MERRA2 grid (points) to the data — add_merra2_points","text":"x data.frame `locid` column","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/add_merra2_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds MERRA2 grid (points) to the data — add_merra2_points","text":"`x` `sf` object, added geometry (points)","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/angle_of_incidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Angle of Incidence (AOI) — angle_of_incidence","title":"Angle of Incidence (AOI) — angle_of_incidence","text":"Angle Incidence (AOI)","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/angle_of_incidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Angle of Incidence (AOI) — angle_of_incidence","text":"","code":"angle_of_incidence(   x,   array.type = \"fh\",   suffix = TRUE,   azimuth_Q = \"azimuth_Q\",   zenith = \"zenith\",   na.val = NA,   zenith.max = 90,   AOI.max = 90,   verbose = getOption(\"merra2.verbose\"),   ... )  fAOI(   x,   array.type = \"fh\",   suffix = TRUE,   azimuth_Q = \"azimuth_Q\",   zenith = \"zenith\",   na.val = NA,   zenith.max = 90,   AOI.max = 90,   verbose = getOption(\"merra2.verbose\"),   ... )"},{"path":"https://energyRt.github.io/merra2ools/reference/angle_of_incidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Angle of Incidence (AOI) — angle_of_incidence","text":"x  array.type  suffix  azimuth_Q solar zenith angle, degrees zenith solar azimuth angle, degrees na.val  zenith.max  verbose  ...","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/angle_of_incidence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Angle of Incidence (AOI) — angle_of_incidence","text":"\\[AOI = \\arccos\\big({\\cos{(zenith)}\\cos{(array.tilt)}+              \\sin{(zenith)}\\sin{(array.tilt)}\\cos{(azimuth-array.azimuth)}\\big)}\\]     Though equation returns AOI values given set zenith, azimuth,     array.tilt, array.azimuth, AOI meaningful     \\(0 \\leq zenith \\leq 90\\), \\(0 \\leq AOI \\leq 90\\).     former condition assures sun horizon     latter condition assures sunlight beam able hit panel     (Source: Stackhouse et al., 2018).","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/angle_of_incidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Angle of Incidence (AOI) — angle_of_incidence","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/azimuth_N2Q.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — azimuth_N2Q","title":"Title — azimuth_N2Q","text":"Title","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/azimuth_N2Q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — azimuth_N2Q","text":"","code":"azimuth_N2Q(   x,   azimuth_N = \"azimuth_N\",   azimuth_Q = \"azimuth_Q\",   lat = \"lat\",   lon = \"lon\" )"},{"path":"https://energyRt.github.io/merra2ools/reference/azimuth_N2Q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — azimuth_N2Q","text":"x  azimuth_N  azimuth_Q  lat  lon","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/closest_locid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MERRA-2 grid IDs closest to the given coordinates — closest_locid","title":"Get MERRA-2 grid IDs closest to the given coordinates — closest_locid","text":"Get MERRA-2 grid IDs closest given coordinates","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/closest_locid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MERRA-2 grid IDs closest to the given coordinates — closest_locid","text":"","code":"closest_locid(lon, lat, asList = FALSE)"},{"path":"https://energyRt.github.io/merra2ools/reference/closest_locid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MERRA-2 grid IDs closest to the given coordinates — closest_locid","text":"lon longitude degrees (-180 <= lon <= 180) lat latitude degrees (-90 <= lat <= 90) asList","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/closest_locid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MERRA-2 grid IDs closest to the given coordinates — closest_locid","text":"integer vector locations IDs (locid) `asList` FALSE (default). case several values, first `locid` returned. `asList` TRUE, list returned possible multiple values coordinate.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/closest_locid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get MERRA-2 grid IDs closest to the given coordinates — closest_locid","text":"","code":"closest_locid(0, 0) #> [1] 103969 closest_locid(100.14, -85.145) #> [1] 6209 closest_locid(0, 89.5, asList = TRUE) #> [[1]] #> [1] 207073 #>"},{"path":"https://energyRt.github.io/merra2ools/reference/cluster_locid.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial clustering based on correlation or other metrics. — cluster_locid","title":"Spatial clustering based on correlation or other metrics. — cluster_locid","text":"Spatial clustering based correlation metrics.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/cluster_locid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial clustering based on correlation or other metrics. — cluster_locid","text":"","code":"cluster_locid(   x,   varname,   locid = \"locid\",   time = \"UTC\",   locid_info = NULL,   weight = NULL,   group = NULL,   k = c(1:20, 25, 30, 40, 50, 75, 100, 150, 200, 300, 500, 1000, 10000),   max_loss = 0.05,   distance = \"cor\",   cores = 1,   plot = FALSE,   verbose = TRUE,   ... )"},{"path":"https://energyRt.github.io/merra2ools/reference/cluster_locid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial clustering based on correlation or other metrics. — cluster_locid","text":"x `data.frame` (merra subset) location time identifiers, time-series variable cluster. varname name column data used cluster locations. locid name column location identifiers. time name column time dimension locid_info (optional) `data.frame` `sf` object weights /spatial groups (regions) location identifiers. weight (optional) name column (positive) weights `locid_info`, used calculating weighted `mean` `sd` metrics. group (optional) name column group-names locations (regions). provided, clustering made group separately. k (optional) integer vector number clusters test. default (`NULL`) clustering process start `1` number locations terminates `max_loss` condition met. max_loss maximum loss variation (standard deviation) clustered variable, measured `1 - sd(clustered_variable) / sd(original_variable)`. Default value `0.05`, meaning `5` percent variability original, non-clustered variable allowed lost clustering. distance character name selected distance measure use `TSdist::KMedoids`. Default metrics `cor` - Pearson's correlation time series variable different locations. Alternative, allowed methasures: `\"euclidean\", \"manhattan\", \"minkowski\", \"infnorm\", \"ccor\", \"sts\", \"dtw\", \"keogh_lb\", \"edr\", \"erp\", \"lcss\", \"fourier\", \"tquest\", \"dissimfull\", \"dissimapprox\", \"acf\", \"pacf\", \"ar.lpc.ceps\", \"ar.mah\", \"ar.mah.statistic\", \"ar.mah.pvalue\", \"ar.pic\", \"cdm\", \"cid\", \"cor\", \"cort\", \"wav\", \"int.per\", \"per\", \"mindist.sax\", \"ncd\", \"pred\", \"spec.glk\", \"spec.isd\", \"spec.llr\", \"pdc\", \"frechet\"`. cores integer number processor cores use, currently ignored. verbose logical, clustering process reported, TRUE default. ... additional parameters pass `TSdist::KMedoids`, might required distance measures.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/cluster_locid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial clustering based on correlation or other metrics. — cluster_locid","text":"`data.frame` alternative number clusters columns: k Number clusters N Total number time series locid location identifier `merra2ools` datasets \"group\" (provided) column locid-groups cluster cluster number every `k`-group weight weight cluster `k`-group sd_N standard deviation whole sample (N) time-series sd_k standard deviation clustered time series `k` clusters sd_loss loss standard deviation result clusterisation, `k`","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/cluster_locid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial clustering based on correlation or other metrics. — cluster_locid","text":"","code":"# see \"Cluster locations\" in \"Get started\""},{"path":"https://energyRt.github.io/merra2ools/reference/coord2tz_offset.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — coord2tz_offset","title":"Title — coord2tz_offset","text":"Title","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/coord2tz_offset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — coord2tz_offset","text":"","code":"coord2tz_offset(lon, lat, utc = NULL)"},{"path":"https://energyRt.github.io/merra2ools/reference/coord2tz_offset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — coord2tz_offset","text":"lon  lat  utc","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/coord2tz_offset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — coord2tz_offset","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/deg2rad.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert degrees to radians — deg2rad","title":"Convert degrees to radians — deg2rad","text":"Convert degrees radians","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/deg2rad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert degrees to radians — deg2rad","text":"","code":"deg2rad(x)  rad2deg(x)"},{"path":"https://energyRt.github.io/merra2ools/reference/deg2rad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert degrees to radians — deg2rad","text":"x","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/deg2rad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert degrees to radians — deg2rad","text":"numeric vector, radians","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/deg2rad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert degrees to radians — deg2rad","text":"","code":"rad2deg(pi) #> [1] 180 deg2rad(180) #> [1] 3.141593 deg2rad(rad2deg(pi)) #> [1] 3.141593 cos(pi); cos(deg2rad(rad2deg(pi))) #> [1] -1 #> [1] -1"},{"path":"https://energyRt.github.io/merra2ools/reference/fDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create date-time character string from year, month, hour, and timezone. — fDate","title":"Create date-time character string from year, month, hour, and timezone. — fDate","text":"Create date-time character string year, month, hour, timezone.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create date-time character string from year, month, hour, and timezone. — fDate","text":"","code":"fDate(year, month, day, hour, tz = \"UTC\")"},{"path":"https://energyRt.github.io/merra2ools/reference/fDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create date-time character string from year, month, hour, and timezone. — fDate","text":"year integer, year month integer, month (1-12) day integer (1-31) character (\"last\"), day month. hour integer, hour (0-23) tz Olson timezone code (`OlsonNames()`), \"UTC\" default.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fDate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create date-time character string from year, month, hour, and timezone. — fDate","text":"utility function create input format used `get_merra2_subset`.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fDate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create date-time character string from year, month, hour, and timezone. — fDate","text":"","code":"fDate(2010, 12, \"last\", 23) #> [1] \"2010-12-31 23\" fDate(2010, 1, 1, 0) #> [1] \"2010-01-01 00\" OlsonNames() #>   [1] \"Africa/Abidjan\"                   \"Africa/Accra\"                     #>   [3] \"Africa/Addis_Ababa\"               \"Africa/Algiers\"                   #>   [5] \"Africa/Asmara\"                    \"Africa/Asmera\"                    #>   [7] \"Africa/Bamako\"                    \"Africa/Bangui\"                    #>   [9] \"Africa/Banjul\"                    \"Africa/Bissau\"                    #>  [11] \"Africa/Blantyre\"                  \"Africa/Brazzaville\"               #>  [13] \"Africa/Bujumbura\"                 \"Africa/Cairo\"                     #>  [15] \"Africa/Casablanca\"                \"Africa/Ceuta\"                     #>  [17] \"Africa/Conakry\"                   \"Africa/Dakar\"                     #>  [19] \"Africa/Dar_es_Salaam\"             \"Africa/Djibouti\"                  #>  [21] \"Africa/Douala\"                    \"Africa/El_Aaiun\"                  #>  [23] \"Africa/Freetown\"                  \"Africa/Gaborone\"                  #>  [25] \"Africa/Harare\"                    \"Africa/Johannesburg\"              #>  [27] \"Africa/Juba\"                      \"Africa/Kampala\"                   #>  [29] \"Africa/Khartoum\"                  \"Africa/Kigali\"                    #>  [31] \"Africa/Kinshasa\"                  \"Africa/Lagos\"                     #>  [33] \"Africa/Libreville\"                \"Africa/Lome\"                      #>  [35] \"Africa/Luanda\"                    \"Africa/Lubumbashi\"                #>  [37] \"Africa/Lusaka\"                    \"Africa/Malabo\"                    #>  [39] \"Africa/Maputo\"                    \"Africa/Maseru\"                    #>  [41] \"Africa/Mbabane\"                   \"Africa/Mogadishu\"                 #>  [43] \"Africa/Monrovia\"                  \"Africa/Nairobi\"                   #>  [45] \"Africa/Ndjamena\"                  \"Africa/Niamey\"                    #>  [47] \"Africa/Nouakchott\"                \"Africa/Ouagadougou\"               #>  [49] \"Africa/Porto-Novo\"                \"Africa/Sao_Tome\"                  #>  [51] \"Africa/Timbuktu\"                  \"Africa/Tripoli\"                   #>  [53] \"Africa/Tunis\"                     \"Africa/Windhoek\"                  #>  [55] \"America/Adak\"                     \"America/Anchorage\"                #>  [57] \"America/Anguilla\"                 \"America/Antigua\"                  #>  [59] \"America/Araguaina\"                \"America/Argentina/Buenos_Aires\"   #>  [61] \"America/Argentina/Catamarca\"      \"America/Argentina/ComodRivadavia\" #>  [63] \"America/Argentina/Cordoba\"        \"America/Argentina/Jujuy\"          #>  [65] \"America/Argentina/La_Rioja\"       \"America/Argentina/Mendoza\"        #>  [67] \"America/Argentina/Rio_Gallegos\"   \"America/Argentina/Salta\"          #>  [69] \"America/Argentina/San_Juan\"       \"America/Argentina/San_Luis\"       #>  [71] \"America/Argentina/Tucuman\"        \"America/Argentina/Ushuaia\"        #>  [73] \"America/Aruba\"                    \"America/Asuncion\"                 #>  [75] \"America/Atikokan\"                 \"America/Atka\"                     #>  [77] \"America/Bahia\"                    \"America/Bahia_Banderas\"           #>  [79] \"America/Barbados\"                 \"America/Belem\"                    #>  [81] \"America/Belize\"                   \"America/Blanc-Sablon\"             #>  [83] \"America/Boa_Vista\"                \"America/Bogota\"                   #>  [85] \"America/Boise\"                    \"America/Buenos_Aires\"             #>  [87] \"America/Cambridge_Bay\"            \"America/Campo_Grande\"             #>  [89] \"America/Cancun\"                   \"America/Caracas\"                  #>  [91] \"America/Catamarca\"                \"America/Cayenne\"                  #>  [93] \"America/Cayman\"                   \"America/Chicago\"                  #>  [95] \"America/Chihuahua\"                \"America/Ciudad_Juarez\"            #>  [97] \"America/Coral_Harbour\"            \"America/Cordoba\"                  #>  [99] \"America/Costa_Rica\"               \"America/Coyhaique\"                #> [101] \"America/Creston\"                  \"America/Cuiaba\"                   #> [103] \"America/Curacao\"                  \"America/Danmarkshavn\"             #> [105] \"America/Dawson\"                   \"America/Dawson_Creek\"             #> [107] \"America/Denver\"                   \"America/Detroit\"                  #> [109] \"America/Dominica\"                 \"America/Edmonton\"                 #> [111] \"America/Eirunepe\"                 \"America/El_Salvador\"              #> [113] \"America/Ensenada\"                 \"America/Fort_Nelson\"              #> [115] \"America/Fort_Wayne\"               \"America/Fortaleza\"                #> [117] \"America/Glace_Bay\"                \"America/Godthab\"                  #> [119] \"America/Goose_Bay\"                \"America/Grand_Turk\"               #> [121] \"America/Grenada\"                  \"America/Guadeloupe\"               #> [123] \"America/Guatemala\"                \"America/Guayaquil\"                #> [125] \"America/Guyana\"                   \"America/Halifax\"                  #> [127] \"America/Havana\"                   \"America/Hermosillo\"               #> [129] \"America/Indiana/Indianapolis\"     \"America/Indiana/Knox\"             #> [131] \"America/Indiana/Marengo\"          \"America/Indiana/Petersburg\"       #> [133] \"America/Indiana/Tell_City\"        \"America/Indiana/Vevay\"            #> [135] \"America/Indiana/Vincennes\"        \"America/Indiana/Winamac\"          #> [137] \"America/Indianapolis\"             \"America/Inuvik\"                   #> [139] \"America/Iqaluit\"                  \"America/Jamaica\"                  #> [141] \"America/Jujuy\"                    \"America/Juneau\"                   #> [143] \"America/Kentucky/Louisville\"      \"America/Kentucky/Monticello\"      #> [145] \"America/Knox_IN\"                  \"America/Kralendijk\"               #> [147] \"America/La_Paz\"                   \"America/Lima\"                     #> [149] \"America/Los_Angeles\"              \"America/Louisville\"               #> [151] \"America/Lower_Princes\"            \"America/Maceio\"                   #> [153] \"America/Managua\"                  \"America/Manaus\"                   #> [155] \"America/Marigot\"                  \"America/Martinique\"               #> [157] \"America/Matamoros\"                \"America/Mazatlan\"                 #> [159] \"America/Mendoza\"                  \"America/Menominee\"                #> [161] \"America/Merida\"                   \"America/Metlakatla\"               #> [163] \"America/Mexico_City\"              \"America/Miquelon\"                 #> [165] \"America/Moncton\"                  \"America/Monterrey\"                #> [167] \"America/Montevideo\"               \"America/Montreal\"                 #> [169] \"America/Montserrat\"               \"America/Nassau\"                   #> [171] \"America/New_York\"                 \"America/Nipigon\"                  #> [173] \"America/Nome\"                     \"America/Noronha\"                  #> [175] \"America/North_Dakota/Beulah\"      \"America/North_Dakota/Center\"      #> [177] \"America/North_Dakota/New_Salem\"   \"America/Nuuk\"                     #> [179] \"America/Ojinaga\"                  \"America/Panama\"                   #> [181] \"America/Pangnirtung\"              \"America/Paramaribo\"               #> [183] \"America/Phoenix\"                  \"America/Port-au-Prince\"           #> [185] \"America/Port_of_Spain\"            \"America/Porto_Acre\"               #> [187] \"America/Porto_Velho\"              \"America/Puerto_Rico\"              #> [189] \"America/Punta_Arenas\"             \"America/Rainy_River\"              #> [191] \"America/Rankin_Inlet\"             \"America/Recife\"                   #> [193] \"America/Regina\"                   \"America/Resolute\"                 #> [195] \"America/Rio_Branco\"               \"America/Rosario\"                  #> [197] \"America/Santa_Isabel\"             \"America/Santarem\"                 #> [199] \"America/Santiago\"                 \"America/Santo_Domingo\"            #> [201] \"America/Sao_Paulo\"                \"America/Scoresbysund\"             #> [203] \"America/Shiprock\"                 \"America/Sitka\"                    #> [205] \"America/St_Barthelemy\"            \"America/St_Johns\"                 #> [207] \"America/St_Kitts\"                 \"America/St_Lucia\"                 #> [209] \"America/St_Thomas\"                \"America/St_Vincent\"               #> [211] \"America/Swift_Current\"            \"America/Tegucigalpa\"              #> [213] \"America/Thule\"                    \"America/Thunder_Bay\"              #> [215] \"America/Tijuana\"                  \"America/Toronto\"                  #> [217] \"America/Tortola\"                  \"America/Vancouver\"                #> [219] \"America/Virgin\"                   \"America/Whitehorse\"               #> [221] \"America/Winnipeg\"                 \"America/Yakutat\"                  #> [223] \"America/Yellowknife\"              \"Antarctica/Casey\"                 #> [225] \"Antarctica/Davis\"                 \"Antarctica/DumontDUrville\"        #> [227] \"Antarctica/Macquarie\"             \"Antarctica/Mawson\"                #> [229] \"Antarctica/McMurdo\"               \"Antarctica/Palmer\"                #> [231] \"Antarctica/Rothera\"               \"Antarctica/South_Pole\"            #> [233] \"Antarctica/Syowa\"                 \"Antarctica/Troll\"                 #> [235] \"Antarctica/Vostok\"                \"Arctic/Longyearbyen\"              #> [237] \"Asia/Aden\"                        \"Asia/Almaty\"                      #> [239] \"Asia/Amman\"                       \"Asia/Anadyr\"                      #> [241] \"Asia/Aqtau\"                       \"Asia/Aqtobe\"                      #> [243] \"Asia/Ashgabat\"                    \"Asia/Ashkhabad\"                   #> [245] \"Asia/Atyrau\"                      \"Asia/Baghdad\"                     #> [247] \"Asia/Bahrain\"                     \"Asia/Baku\"                        #> [249] \"Asia/Bangkok\"                     \"Asia/Barnaul\"                     #> [251] \"Asia/Beirut\"                      \"Asia/Bishkek\"                     #> [253] \"Asia/Brunei\"                      \"Asia/Calcutta\"                    #> [255] \"Asia/Chita\"                       \"Asia/Choibalsan\"                  #> [257] \"Asia/Chongqing\"                   \"Asia/Chungking\"                   #> [259] \"Asia/Colombo\"                     \"Asia/Dacca\"                       #> [261] \"Asia/Damascus\"                    \"Asia/Dhaka\"                       #> [263] \"Asia/Dili\"                        \"Asia/Dubai\"                       #> [265] \"Asia/Dushanbe\"                    \"Asia/Famagusta\"                   #> [267] \"Asia/Gaza\"                        \"Asia/Harbin\"                      #> [269] \"Asia/Hebron\"                      \"Asia/Ho_Chi_Minh\"                 #> [271] \"Asia/Hong_Kong\"                   \"Asia/Hovd\"                        #> [273] \"Asia/Irkutsk\"                     \"Asia/Istanbul\"                    #> [275] \"Asia/Jakarta\"                     \"Asia/Jayapura\"                    #> [277] \"Asia/Jerusalem\"                   \"Asia/Kabul\"                       #> [279] \"Asia/Kamchatka\"                   \"Asia/Karachi\"                     #> [281] \"Asia/Kashgar\"                     \"Asia/Kathmandu\"                   #> [283] \"Asia/Katmandu\"                    \"Asia/Khandyga\"                    #> [285] \"Asia/Kolkata\"                     \"Asia/Krasnoyarsk\"                 #> [287] \"Asia/Kuala_Lumpur\"                \"Asia/Kuching\"                     #> [289] \"Asia/Kuwait\"                      \"Asia/Macao\"                       #> [291] \"Asia/Macau\"                       \"Asia/Magadan\"                     #> [293] \"Asia/Makassar\"                    \"Asia/Manila\"                      #> [295] \"Asia/Muscat\"                      \"Asia/Nicosia\"                     #> [297] \"Asia/Novokuznetsk\"                \"Asia/Novosibirsk\"                 #> [299] \"Asia/Omsk\"                        \"Asia/Oral\"                        #> [301] \"Asia/Phnom_Penh\"                  \"Asia/Pontianak\"                   #> [303] \"Asia/Pyongyang\"                   \"Asia/Qatar\"                       #> [305] \"Asia/Qostanay\"                    \"Asia/Qyzylorda\"                   #> [307] \"Asia/Rangoon\"                     \"Asia/Riyadh\"                      #> [309] \"Asia/Saigon\"                      \"Asia/Sakhalin\"                    #> [311] \"Asia/Samarkand\"                   \"Asia/Seoul\"                       #> [313] \"Asia/Shanghai\"                    \"Asia/Singapore\"                   #> [315] \"Asia/Srednekolymsk\"               \"Asia/Taipei\"                      #> [317] \"Asia/Tashkent\"                    \"Asia/Tbilisi\"                     #> [319] \"Asia/Tehran\"                      \"Asia/Tel_Aviv\"                    #> [321] \"Asia/Thimbu\"                      \"Asia/Thimphu\"                     #> [323] \"Asia/Tokyo\"                       \"Asia/Tomsk\"                       #> [325] \"Asia/Ujung_Pandang\"               \"Asia/Ulaanbaatar\"                 #> [327] \"Asia/Ulan_Bator\"                  \"Asia/Urumqi\"                      #> [329] \"Asia/Ust-Nera\"                    \"Asia/Vientiane\"                   #> [331] \"Asia/Vladivostok\"                 \"Asia/Yakutsk\"                     #> [333] \"Asia/Yangon\"                      \"Asia/Yekaterinburg\"               #> [335] \"Asia/Yerevan\"                     \"Atlantic/Azores\"                  #> [337] \"Atlantic/Bermuda\"                 \"Atlantic/Canary\"                  #> [339] \"Atlantic/Cape_Verde\"              \"Atlantic/Faeroe\"                  #> [341] \"Atlantic/Faroe\"                   \"Atlantic/Jan_Mayen\"               #> [343] \"Atlantic/Madeira\"                 \"Atlantic/Reykjavik\"               #> [345] \"Atlantic/South_Georgia\"           \"Atlantic/St_Helena\"               #> [347] \"Atlantic/Stanley\"                 \"Australia/ACT\"                    #> [349] \"Australia/Adelaide\"               \"Australia/Brisbane\"               #> [351] \"Australia/Broken_Hill\"            \"Australia/Canberra\"               #> [353] \"Australia/Currie\"                 \"Australia/Darwin\"                 #> [355] \"Australia/Eucla\"                  \"Australia/Hobart\"                 #> [357] \"Australia/LHI\"                    \"Australia/Lindeman\"               #> [359] \"Australia/Lord_Howe\"              \"Australia/Melbourne\"              #> [361] \"Australia/NSW\"                    \"Australia/North\"                  #> [363] \"Australia/Perth\"                  \"Australia/Queensland\"             #> [365] \"Australia/South\"                  \"Australia/Sydney\"                 #> [367] \"Australia/Tasmania\"               \"Australia/Victoria\"               #> [369] \"Australia/West\"                   \"Australia/Yancowinna\"             #> [371] \"Brazil/Acre\"                      \"Brazil/DeNoronha\"                 #> [373] \"Brazil/East\"                      \"Brazil/West\"                      #> [375] \"CET\"                              \"CST6CDT\"                          #> [377] \"Canada/Atlantic\"                  \"Canada/Central\"                   #> [379] \"Canada/Eastern\"                   \"Canada/Mountain\"                  #> [381] \"Canada/Newfoundland\"              \"Canada/Pacific\"                   #> [383] \"Canada/Saskatchewan\"              \"Canada/Yukon\"                     #> [385] \"Chile/Continental\"                \"Chile/EasterIsland\"               #> [387] \"Cuba\"                             \"EET\"                              #> [389] \"EST\"                              \"EST5EDT\"                          #> [391] \"Egypt\"                            \"Eire\"                             #> [393] \"Etc/GMT\"                          \"Etc/GMT+0\"                        #> [395] \"Etc/GMT+1\"                        \"Etc/GMT+10\"                       #> [397] \"Etc/GMT+11\"                       \"Etc/GMT+12\"                       #> [399] \"Etc/GMT+2\"                        \"Etc/GMT+3\"                        #> [401] \"Etc/GMT+4\"                        \"Etc/GMT+5\"                        #> [403] \"Etc/GMT+6\"                        \"Etc/GMT+7\"                        #> [405] \"Etc/GMT+8\"                        \"Etc/GMT+9\"                        #> [407] \"Etc/GMT-0\"                        \"Etc/GMT-1\"                        #> [409] \"Etc/GMT-10\"                       \"Etc/GMT-11\"                       #> [411] \"Etc/GMT-12\"                       \"Etc/GMT-13\"                       #> [413] \"Etc/GMT-14\"                       \"Etc/GMT-2\"                        #> [415] \"Etc/GMT-3\"                        \"Etc/GMT-4\"                        #> [417] \"Etc/GMT-5\"                        \"Etc/GMT-6\"                        #> [419] \"Etc/GMT-7\"                        \"Etc/GMT-8\"                        #> [421] \"Etc/GMT-9\"                        \"Etc/GMT0\"                         #> [423] \"Etc/Greenwich\"                    \"Etc/UCT\"                          #> [425] \"Etc/UTC\"                          \"Etc/Universal\"                    #> [427] \"Etc/Zulu\"                         \"Europe/Amsterdam\"                 #> [429] \"Europe/Andorra\"                   \"Europe/Astrakhan\"                 #> [431] \"Europe/Athens\"                    \"Europe/Belfast\"                   #> [433] \"Europe/Belgrade\"                  \"Europe/Berlin\"                    #> [435] \"Europe/Bratislava\"                \"Europe/Brussels\"                  #> [437] \"Europe/Bucharest\"                 \"Europe/Budapest\"                  #> [439] \"Europe/Busingen\"                  \"Europe/Chisinau\"                  #> [441] \"Europe/Copenhagen\"                \"Europe/Dublin\"                    #> [443] \"Europe/Gibraltar\"                 \"Europe/Guernsey\"                  #> [445] \"Europe/Helsinki\"                  \"Europe/Isle_of_Man\"               #> [447] \"Europe/Istanbul\"                  \"Europe/Jersey\"                    #> [449] \"Europe/Kaliningrad\"               \"Europe/Kiev\"                      #> [451] \"Europe/Kirov\"                     \"Europe/Kyiv\"                      #> [453] \"Europe/Lisbon\"                    \"Europe/Ljubljana\"                 #> [455] \"Europe/London\"                    \"Europe/Luxembourg\"                #> [457] \"Europe/Madrid\"                    \"Europe/Malta\"                     #> [459] \"Europe/Mariehamn\"                 \"Europe/Minsk\"                     #> [461] \"Europe/Monaco\"                    \"Europe/Moscow\"                    #> [463] \"Europe/Nicosia\"                   \"Europe/Oslo\"                      #> [465] \"Europe/Paris\"                     \"Europe/Podgorica\"                 #> [467] \"Europe/Prague\"                    \"Europe/Riga\"                      #> [469] \"Europe/Rome\"                      \"Europe/Samara\"                    #> [471] \"Europe/San_Marino\"                \"Europe/Sarajevo\"                  #> [473] \"Europe/Saratov\"                   \"Europe/Simferopol\"                #> [475] \"Europe/Skopje\"                    \"Europe/Sofia\"                     #> [477] \"Europe/Stockholm\"                 \"Europe/Tallinn\"                   #> [479] \"Europe/Tirane\"                    \"Europe/Tiraspol\"                  #> [481] \"Europe/Ulyanovsk\"                 \"Europe/Uzhgorod\"                  #> [483] \"Europe/Vaduz\"                     \"Europe/Vatican\"                   #> [485] \"Europe/Vienna\"                    \"Europe/Vilnius\"                   #> [487] \"Europe/Volgograd\"                 \"Europe/Warsaw\"                    #> [489] \"Europe/Zagreb\"                    \"Europe/Zaporozhye\"                #> [491] \"Europe/Zurich\"                    \"GB\"                               #> [493] \"GB-Eire\"                          \"GMT\"                              #> [495] \"GMT+0\"                            \"GMT-0\"                            #> [497] \"GMT0\"                             \"Greenwich\"                        #> [499] \"HST\"                              \"Hongkong\"                         #> [501] \"Iceland\"                          \"Indian/Antananarivo\"              #> [503] \"Indian/Chagos\"                    \"Indian/Christmas\"                 #> [505] \"Indian/Cocos\"                     \"Indian/Comoro\"                    #> [507] \"Indian/Kerguelen\"                 \"Indian/Mahe\"                      #> [509] \"Indian/Maldives\"                  \"Indian/Mauritius\"                 #> [511] \"Indian/Mayotte\"                   \"Indian/Reunion\"                   #> [513] \"Iran\"                             \"Israel\"                           #> [515] \"Jamaica\"                          \"Japan\"                            #> [517] \"Kwajalein\"                        \"Libya\"                            #> [519] \"MET\"                              \"MST\"                              #> [521] \"MST7MDT\"                          \"Mexico/BajaNorte\"                 #> [523] \"Mexico/BajaSur\"                   \"Mexico/General\"                   #> [525] \"NZ\"                               \"NZ-CHAT\"                          #> [527] \"Navajo\"                           \"PRC\"                              #> [529] \"PST8PDT\"                          \"Pacific/Apia\"                     #> [531] \"Pacific/Auckland\"                 \"Pacific/Bougainville\"             #> [533] \"Pacific/Chatham\"                  \"Pacific/Chuuk\"                    #> [535] \"Pacific/Easter\"                   \"Pacific/Efate\"                    #> [537] \"Pacific/Enderbury\"                \"Pacific/Fakaofo\"                  #> [539] \"Pacific/Fiji\"                     \"Pacific/Funafuti\"                 #> [541] \"Pacific/Galapagos\"                \"Pacific/Gambier\"                  #> [543] \"Pacific/Guadalcanal\"              \"Pacific/Guam\"                     #> [545] \"Pacific/Honolulu\"                 \"Pacific/Johnston\"                 #> [547] \"Pacific/Kanton\"                   \"Pacific/Kiritimati\"               #> [549] \"Pacific/Kosrae\"                   \"Pacific/Kwajalein\"                #> [551] \"Pacific/Majuro\"                   \"Pacific/Marquesas\"                #> [553] \"Pacific/Midway\"                   \"Pacific/Nauru\"                    #> [555] \"Pacific/Niue\"                     \"Pacific/Norfolk\"                  #> [557] \"Pacific/Noumea\"                   \"Pacific/Pago_Pago\"                #> [559] \"Pacific/Palau\"                    \"Pacific/Pitcairn\"                 #> [561] \"Pacific/Pohnpei\"                  \"Pacific/Ponape\"                   #> [563] \"Pacific/Port_Moresby\"             \"Pacific/Rarotonga\"                #> [565] \"Pacific/Saipan\"                   \"Pacific/Samoa\"                    #> [567] \"Pacific/Tahiti\"                   \"Pacific/Tarawa\"                   #> [569] \"Pacific/Tongatapu\"                \"Pacific/Truk\"                     #> [571] \"Pacific/Wake\"                     \"Pacific/Wallis\"                   #> [573] \"Pacific/Yap\"                      \"Poland\"                           #> [575] \"Portugal\"                         \"ROC\"                              #> [577] \"ROK\"                              \"Singapore\"                        #> [579] \"Turkey\"                           \"UCT\"                              #> [581] \"US/Alaska\"                        \"US/Aleutian\"                      #> [583] \"US/Arizona\"                       \"US/Central\"                       #> [585] \"US/East-Indiana\"                  \"US/Eastern\"                       #> [587] \"US/Hawaii\"                        \"US/Indiana-Starke\"                #> [589] \"US/Michigan\"                      \"US/Mountain\"                      #> [591] \"US/Pacific\"                       \"US/Samoa\"                         #> [593] \"UTC\"                              \"Universal\"                        #> [595] \"W-SU\"                             \"WET\"                              #> [597] \"Zulu\"                             #> attr(,\"Version\") #> [1] \"2025b\" fDate(2010, 1, 1, 0, tz = \"America/New_York\") #> [1] \"2010-01-01 05\" fDate(2010, 1, 1, 0, tz = \"Pacific/Auckland\") #> [1] \"2009-12-31 11\" fDate(2010, 1, 1, 0, tz = \"Asia/Kolkata\") #> [1] \"2009-12-31 18\""},{"path":"https://energyRt.github.io/merra2ools/reference/fetch_pvwatts.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — fetch_pvwatts","title":"Title — fetch_pvwatts","text":"Title","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fetch_pvwatts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — fetch_pvwatts","text":"","code":"fetch_pvwatts(   query = list(lat = 0, lon = 0, dataset = \"intl\", radius = 1000, system_capacity = 1,     module_type = 1, losses = 10, array_type = 0, tilt = 0, azimuth = 0, timeframe =     \"hourly\"),   array.type = NULL,   ...,   asList = TRUE,   asJSON = !asList,   pvwatts_api_url = \"https://developer.nrel.gov/api/pvwatts/v6.json?api_key=\",   api_key = getOption(\"pwatts.api.key\") )"},{"path":"https://energyRt.github.io/merra2ools/reference/fetch_pvwatts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — fetch_pvwatts","text":"query  array.type  ...  asList  asJSON  pvwatts_api_url  api_key","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fetch_pvwatts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Title — fetch_pvwatts","text":"<https://developer.nrel.gov/docs/solar/pvwatts/v6/>","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fetch_pvwatts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — fetch_pvwatts","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/fHellmann.html","id":null,"dir":"Reference","previous_headings":"","what":"Hellmann function to extrapolate wind speed from 10 and 50 meters to higher altitudes — fHellmann","title":"Hellmann function to extrapolate wind speed from 10 and 50 meters to higher altitudes — fHellmann","text":"Hellmann function extrapolate wind speed 10 50 meters higher altitudes","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fHellmann.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hellmann function to extrapolate wind speed from 10 and 50 meters to higher altitudes — fHellmann","text":"","code":"fHellmann(W10M, W50M, na = 0, inf = 0, lo = 0, up = 0.6, ...)  fH(W10M, W50M, na = 0, inf = 0, lo = 0, up = 0.6, ...)"},{"path":"https://energyRt.github.io/merra2ools/reference/fHellmann.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hellmann function to extrapolate wind speed from 10 and 50 meters to higher altitudes — fHellmann","text":"W10M wind speed (m/s) 10 meters altitude W50M wind speed (m/s) 50 meters altitude na values return case NA inf values return instead infinite lo lower limit, zero default control negative values lower limit, 0.6 default control excessive values","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fHellmann.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hellmann function to extrapolate wind speed from 10 and 50 meters to higher altitudes — fHellmann","text":"numeric vector estimated Hellmann exponent.","code":""},{"path":[]},{"path":"https://energyRt.github.io/merra2ools/reference/fHellmann.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hellmann function to extrapolate wind speed from 10 and 50 meters to higher altitudes — fHellmann","text":"","code":"fH(5, 10) #> [1] 0.4306766"},{"path":"https://energyRt.github.io/merra2ools/reference/fWindCF.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — fWindCF","title":"Title — fWindCF","text":"Title","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fWindCF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — fWindCF","text":"","code":"fWindCF(   x,   height = 50,   mps = paste0(\"W\", height, \"M\"),   return_name = paste0(\"win\", height, \"af\"),   hellmann = \"hellmann\",   W10M = \"W10M\",   W50M = \"W50M\",   WPC = fWindPowerCurve,   verbose = TRUE,   ... )"},{"path":"https://energyRt.github.io/merra2ools/reference/fWindCF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — fWindCF","text":"x data frame MERRA-2 subset height height ground mps name wind speed variable available `x` extrapolated using `fHellmann` `fWSE` functions return_name name variable, added (overwritten) `x` hellmann name variable Hellmann constant, either available `x` calculated using `fHellmann` function W10M name variable wind speed 10 meters height W50M name variable wind speed 10 meters height WPC name wind power capacity function verbose TRUE, process reported ... additional parameters `fHellmann`, `fWSE`, `WPC` functions","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fWindCF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — fWindCF","text":"`x` added (overwritten) column wind power capacity factors; name column given `return_name` parameter.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fWindCF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — fWindCF","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/fWindPowerCurve.html","id":null,"dir":"Reference","previous_headings":"","what":"Wind power curve function. Estimates power output based on the speed of wind. — fWindPowerCurve","title":"Wind power curve function. Estimates power output based on the speed of wind. — fWindPowerCurve","text":"Wind power curve function. Estimates power output based speed wind.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fWindPowerCurve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wind power curve function. Estimates power output based on the speed of wind. — fWindPowerCurve","text":"","code":"fWindPowerCurve(mps, cutin = 3, cutoff = 25, data = NULL, ...)  fWPC(mps, cutin = 3, cutoff = 25, data = NULL, ...)"},{"path":"https://energyRt.github.io/merra2ools/reference/fWindPowerCurve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wind power curve function. Estimates power output based on the speed of wind. — fWindPowerCurve","text":"mps wind speed, meters per second cutin minimal speed production cutoff maximum speed wind data data frame list two power curve data, columns `speed` `af`","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fWindPowerCurve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wind power curve function. Estimates power output based on the speed of wind. — fWindPowerCurve","text":"estimated capacity factor wind turbine","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fWindPowerCurve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wind power curve function. Estimates power output based on the speed of wind. — fWindPowerCurve","text":"","code":"fWPC(0:30) #>  [1] 0.000 0.000 0.000 0.000 0.017 0.066 0.138 0.235 0.362 0.518 0.688 0.840 #> [13] 0.941 0.983 0.995 0.999 1.000 1.000 1.000 1.000 1.000 1.000 1.000 1.000 #> [25] 1.000 1.000 0.000 0.000 0.000 0.000 0.000 plot(0:35, WindPowerCurve(0:35), type = \"l\", col = \"red\", lwd = 2) #> Error in WindPowerCurve(0:35): could not find function \"WindPowerCurve\""},{"path":"https://energyRt.github.io/merra2ools/reference/fWindSpeedExtrapolation.html","id":null,"dir":"Reference","previous_headings":"","what":"Hellmann-constant-based extrapolation of wind speed for higher altitudes — fWindSpeedExtrapolation","title":"Hellmann-constant-based extrapolation of wind speed for higher altitudes — fWindSpeedExtrapolation","text":"Hellmann-constant-based extrapolation wind speed higher altitudes","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fWindSpeedExtrapolation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hellmann-constant-based extrapolation of wind speed for higher altitudes — fWindSpeedExtrapolation","text":"","code":"fWindSpeedExtrapolation(m, W10M, hellmann)  fWSE(m, W10M, hellmann)"},{"path":"https://energyRt.github.io/merra2ools/reference/fWindSpeedExtrapolation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hellmann-constant-based extrapolation of wind speed for higher altitudes — fWindSpeedExtrapolation","text":"m height (meters) wind speed estimated; W10M wind speed height 10 meters (MERRA2 database); hellmann Hellmann exponent (calculated fHellmann function)","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fWindSpeedExtrapolation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hellmann-constant-based extrapolation of wind speed for higher altitudes — fWindSpeedExtrapolation","text":"numeric vector estimated wind speed (m/s) m height (meters).","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/fWindSpeedExtrapolation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hellmann-constant-based extrapolation of wind speed for higher altitudes — fWindSpeedExtrapolation","text":"<https://en.wikipedia.org/wiki/Wind_gradient>","code":""},{"path":[]},{"path":"https://energyRt.github.io/merra2ools/reference/fWindSpeedExtrapolation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hellmann-constant-based extrapolation of wind speed for higher altitudes — fWindSpeedExtrapolation","text":"","code":"h <- fH(5, 7) fWSE(50, 5, h) #> [1] 7 fWSE(100, 5, h) #> [1] 8.091554 fWSE(seq(50, 200, 50), 5, h) #> [1] 7.000000 8.091554 8.807364 9.353322"},{"path":"https://energyRt.github.io/merra2ools/reference/get_locid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MERRA-2 grid IDs which overlaps with the given spatial object — get_locid","title":"Get MERRA-2 grid IDs which overlaps with the given spatial object — get_locid","text":"Get MERRA-2 grid IDs overlaps given spatial object","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/get_locid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MERRA-2 grid IDs which overlaps with the given spatial object — get_locid","text":"","code":"get_locid(   x,   method = \"polygons\",   add_poles_points = F,   return_grid = FALSE,   ... )"},{"path":"https://energyRt.github.io/merra2ools/reference/get_locid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MERRA-2 grid IDs which overlaps with the given spatial object — get_locid","text":"x spatial (`sf`) object. Expected CRS `EPSG:4326`, different, attempted transform grid CRS `x`, though intersection algorithms may work well projections. Use `sf::st_transform(x, \"EPSG:4326\")` `sf::st_make_valid(x)` transform correct geometries. method character, \"polygons\" (default) \"points\" grid use `sf::st_intersects` method. ... ignored","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/get_merra2_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MERRA-2 grid — get_merra2_grid","title":"Get MERRA-2 grid — get_merra2_grid","text":"Get MERRA-2 grid","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/get_merra2_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MERRA-2 grid — get_merra2_grid","text":"","code":"get_merra2_grid(   type = \"polygons\",   locid = NULL,   lon = c(-180, 180),   lat = c(-90, 90),   crs = 4326,   add_lonlat = FALSE,   add_poles_points = TRUE,   ... )"},{"path":"https://energyRt.github.io/merra2ools/reference/get_merra2_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MERRA-2 grid — get_merra2_grid","text":"type type grid-data return, spatial points (\"points\") polygons (\"poly\") locid (optional) integer vector location identifiers grid returned. lon numeric vector (min max) range longitude coordinates grid return. Default `c(-180, 180)`. lat numeric vector range latitude coordinates grid return. Default `c(-180, 180)`. crs target coordinate reference system: object class 'sf::crs', input string `sf::st_crs`. Default `4326`. add_lonlat logical, merra-points coordinates (`lon`, `lat`) added data. FALSE default. add_poles_points logical, case \"polygons\" grid, points poles added data. TRUE default. ...","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/get_merra2_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MERRA-2 grid — get_merra2_grid","text":"Returns `sf` object MERRA-2 grid, points polygons. polygons requested, grid  returned MERRA2 coordinates considered centers every polygon, except cells `lat = -90` `lat = 90`. Spatial points returned cells near poles.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/get_merra2_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get MERRA-2 grid — get_merra2_grid","text":"","code":"x <- get_merra2_grid() #> Error in st_as_sf(x): could not find function \"st_as_sf\" head(x) #> Error: object 'x' not found getGrid(\"poly\", \"sf\") #> Error in getGrid(\"poly\", \"sf\"): could not find function \"getGrid\" getGrid(lon = c(-70, -60), lat = c(30, 40), class = \"df\") #> Error in getGrid(lon = c(-70, -60), lat = c(30, 40), class = \"df\"): could not find function \"getGrid\""},{"path":"https://energyRt.github.io/merra2ools/reference/get_merra2_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MERRA-2 subset — get_merra2_subset","title":"Get MERRA-2 subset — get_merra2_subset","text":"Get MERRA-2 subset","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/get_merra2_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MERRA-2 subset — get_merra2_subset","text":"","code":"get_merra2_subset(   locid = 1:207936L,   from = \"1980-01-01 00\",   to = \"2020-12-31 23\",   tz = \"UTC\",   cols = NULL,   quiet = FALSE,   rows_lim = 2 * 10^9,   as_integers = FALSE )"},{"path":"https://energyRt.github.io/merra2ools/reference/get_merra2_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MERRA-2 subset — get_merra2_subset","text":"locid integer vector location locid (values 1 207936) starting date time subset \"YYYY-MM-DD HH\" format ending date time subset \"YYYY-MM-DD HH\" format (see fDate) tz time zone requested date-time interval (see OlsonNames) cols names indexes columns database (NULL default, returning available columns) quiet process reported rows_lim  original.units","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/get_merra2_subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MERRA-2 subset — get_merra2_subset","text":"data.table subset ","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/get_merra2_subset.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get MERRA-2 subset — get_merra2_subset","text":"<https://en.wikipedia.org/wiki/List_of_tz_database_time_zones>","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/get_merra2_subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get MERRA-2 subset — get_merra2_subset","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/ghi_decomposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Irradiance decomposition — ghi_decomposition","title":"Irradiance decomposition — ghi_decomposition","text":"Irradiance decomposition","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/ghi_decomposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Irradiance decomposition — ghi_decomposition","text":"","code":"ghi_decomposition(   x,   yday = \"yday\",   GHI = \"SWGDN\",   zenith = \"zenith\",   beam = \"beam\",   method = 0,   zenith_max = 89,   keep.all = FALSE,   verbose = getOption(\"merra2.verbose\") )"},{"path":"https://energyRt.github.io/merra2ools/reference/ghi_decomposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Irradiance decomposition — ghi_decomposition","text":"x  yday day year, integer vector GHI Global Horizontal Irradiance MERRA-2 subset (\\(GHI, W/m^2\\)) zenith Zenith angle, degrees beam  method  zenith_max  keep. verbose","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/ghi_decomposition.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Irradiance decomposition — ghi_decomposition","text":"List data.frame estimated following solar geometry variables: Extraterrestrial irradiance (\\(G_e\\))     \\[G_e = G_{sc}\\times\\big(1+0.033\\cos{(\\frac{360n}{365})}\\big)\\]     : \\(G_{sc} = 1360.8W/m^2\\), solar constant based latest     NASA observation (Kopp Lean, 2011); \\(n - \\) day year. Clearness index (\\(k_t\\))     \\[k_t = \\frac{GHI}{G_e\\cos{(zenith)}}\\] Diffuse fraction (\\(k_d\\))      \\[k_d = \\begin{cases}          1-0.09k_t & & {k_t < 0.22}\\newline          0.9511-0.1604k_t+4.388k_t^2-16.638k_t^3+12.336k_t^4 & & {0.22 \\leq k_t \\leq 0.8}\\newline          0.165& & {k_t > 0.8}          \\end{cases}          \\] Direct Normal Irradiance (\\(DNI, W/m^2\\))      \\[DNI = \\frac{(1-k_d)}{\\cos{(zenith)}}\\times{GHI}\\] Diffuse Horizontal Irradiance (\\(DHI, W/m^2\\))      \\[DHI = k_d\\times{GHI}\\]     : \\(GHI\\) - Global Horizontal Irradiance (\\(GHI, W/m^2\\)) MERRA-2 dataset.     \\[GHI = DHI + DNI \\times{\\cos{(zenith)}}\\]","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/ghi_decomposition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Irradiance decomposition — ghi_decomposition","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/gif_merra.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick GIF plots — gif_merra","title":"Quick GIF plots — gif_merra","text":"function progress, included package release.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/gif_merra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick GIF plots — gif_merra","text":"","code":"gif_merra(   x,   FUN = \"plot_merra\",   timestamp.variable = \"UTC\",   nmax = 24 * 12,   fps = 12,   gif.width = 576,   gif.height = 360,   filename = NULL,   filename.prefix = \"merra_\",   dirname = \".\",   verbose = getOption(\"merra2.verbose\"),   ... )"},{"path":"https://energyRt.github.io/merra2ools/reference/gif_merra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick GIF plots — gif_merra","text":"x  FUN  nmax  fps  gif.width  gif.height  filename  dirname  verbose  ...","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/gif_merra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quick GIF plots — gif_merra","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/hour_utc2tz.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — hour_utc2tz","title":"Title — hour_utc2tz","text":"Title","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/hour_utc2tz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — hour_utc2tz","text":"","code":"hour_utc2tz(hour_utc, lon = NULL, lat = NULL, tz_offset = NULL)"},{"path":"https://energyRt.github.io/merra2ools/reference/hour_utc2tz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — hour_utc2tz","text":"hour_utc  lon  lat  tz_offset","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/hour_utc2tz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — hour_utc2tz","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/merra2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get, Set, or Check content of the Directory with the MERRA2 database Subset — merra2","title":"Get, Set, or Check content of the Directory with the MERRA2 database Subset — merra2","text":"merra2 subset MERRA2 database global get_merra2 returns current filepath MERRA2 data subset; set_merra2 used set directory database; check_merra2 checks content merra2 directory, lists data-files.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/merra2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get, Set, or Check content of the Directory with the MERRA2 database Subset — merra2","text":"","code":"get_merra2_dir()  set_merra2_options(merra2.dir = NULL, pwatts.api.key = NULL)  check_merra2(   path = get_merra2_dir(),   detailed = FALSE,   verbose = getOption(\"merra2.verbose\") )  merra2_info()"},{"path":"https://energyRt.github.io/merra2ools/reference/merra2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get, Set, or Check content of the Directory with the MERRA2 database Subset — merra2","text":"path character string path (default \"~/data/merra2_subset\") detailed logical, list files returned.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/merra2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get, Set, or Check content of the Directory with the MERRA2 database Subset — merra2","text":"get_merra2 returns character string NULL directory set. set_merra2 returns currently set directory change, invisibly. check_merra2 returns number list data-files merra2 directory.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/merra2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get, Set, or Check content of the Directory with the MERRA2 database Subset — merra2","text":"Bosilovich, M. G., R. Lucchesi, M. Suarez, 2016: MERRA-2: File Specification. GMAO Office Note . 9 (Version 1.1), 73 pp, available http://gmao.gsfc.nasa.gov/pubs/office_notes Global Modeling Assimilation Office (GMAO) (2015), MERRA-2 tavg1_2d_rad_Nx: 2d,1-Hourly,Time-Averaged,Single-Level,Assimilation,Radiation Diagnostics 0.625 x 0.5 degree V5.12.4 (M2T1NXRAD) GES DISC. Accessed: 2019-2020 DOI: 10.5067/Q9QMY5PBNV1T Global Modeling Assimilation Office (GMAO) (2015), MERRA-2 tavg1_2d_slv_Nx: 2d,1-Hourly,Time-Averaged,Single-Level,Assimilation,Single-Level Diagnostics V5.12.4 (M2T1NXSLV) GES DISC. Accessed: 2019-2020 DOI: 10.5067/VJAFPLI1CSIV","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/merra2ools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"merra2ools: R-tools to process MERRA-2 data (NASA) with focus on renewable energy — merra2ools-package","title":"merra2ools: R-tools to process MERRA-2 data (NASA) with focus on renewable energy — merra2ools-package","text":"toolbox evaluation hourly availability solar wind energy potential globally, based MERRA-2 satellite reanalysis data subset (requires data download : https://doi.org/10.5061/dryad.v41ns1rtt).","code":""},{"path":[]},{"path":"https://energyRt.github.io/merra2ools/reference/merra2ools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"merra2ools: R-tools to process MERRA-2 data (NASA) with focus on renewable energy — merra2ools-package","text":"Maintainer: Oleg Lugovoy olugovoy@gmail.com Authors: Shuo Gao gaoshuo@cet.net.cn","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/merra2_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a example of MERRA2 data for a particular month(s) — merra2_sample","title":"Get a example of MERRA2 data for a particular month(s) — merra2_sample","text":"Get example MERRA2 data particular month(s)","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/merra2_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a example of MERRA2 data for a particular month(s) — merra2_sample","text":"","code":"merra2_sample(month = 1:12, add.coord = FALSE)"},{"path":"https://energyRt.github.io/merra2ools/reference/merra2_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a example of MERRA2 data for a particular month(s) — merra2_sample","text":"month integer vector month numbers (1 12)","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/merra2_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a example of MERRA2 data for a particular month(s) — merra2_sample","text":"example MERRA-2 data set requested month, 21st day, 2010. returned data.table format returned get_merra2_subset().","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/merra2_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a example of MERRA2 data for a particular month(s) — merra2_sample","text":"","code":"merra2_sample() #>                           UTC  locid  W10M  W50M  WDIR  T10M SWGDN ALBEDO #>                        <POSc>  <int> <num> <num> <int> <int> <int>  <num> #>        1: 2010-01-21 00:30:00      1   2.4   3.1    20   -26   339    0.8 #>        2: 2010-01-21 00:30:00      2   2.4   3.1    20   -26   339    0.8 #>        3: 2010-01-21 00:30:00      3   2.4   3.1    20   -26   339    0.8 #>        4: 2010-01-21 00:30:00      4   2.4   3.1    20   -26   339    0.8 #>        5: 2010-01-21 00:30:00      5   2.4   3.1    20   -26   339    0.8 #>       ---                                                                 #> 59885564: 2010-12-21 23:30:00 207932   6.2   7.8   -40   -10     0     NA #> 59885565: 2010-12-21 23:30:00 207933   6.2   7.8   -40   -10     0     NA #> 59885566: 2010-12-21 23:30:00 207934   6.3   7.8   -40   -10     0     NA #> 59885567: 2010-12-21 23:30:00 207935   6.3   7.8   -40   -10     0     NA #> 59885568: 2010-12-21 23:30:00 207936   6.3   7.8   -40   -10     0     NA #>           PRECTOTCORR  RHOA #>                 <num> <num> #>        1:           0  0.98 #>        2:           0  0.98 #>        3:           0  0.98 #>        4:           0  0.98 #>        5:           0  0.98 #>       ---                   #> 59885564:           0  1.35 #> 59885565:           0  1.35 #> 59885566:           0  1.35 #> 59885567:           0  1.35 #> 59885568:           0  1.35  merra2_sample(2:3) #>                          UTC  locid  W10M  W50M  WDIR  T10M SWGDN ALBEDO #>                       <POSc>  <int> <num> <num> <int> <int> <int>  <num> #>       1: 2010-02-21 00:30:00      1   4.7   6.2   -10   -41   135   0.80 #>       2: 2010-02-21 00:30:00      2   4.7   6.2   -10   -41   135   0.80 #>       3: 2010-02-21 00:30:00      3   4.7   6.2   -10   -41   135   0.80 #>       4: 2010-02-21 00:30:00      4   4.7   6.2   -10   -41   135   0.80 #>       5: 2010-02-21 00:30:00      5   4.7   6.3   -10   -41   135   0.80 #>      ---                                                                 #> 9980924: 2010-03-21 23:30:00 207932   5.5   6.3   -60   -21     0   0.82 #> 9980925: 2010-03-21 23:30:00 207933   5.5   6.4   -60   -21     0   0.82 #> 9980926: 2010-03-21 23:30:00 207934   5.5   6.4   -50   -21     0   0.82 #> 9980927: 2010-03-21 23:30:00 207935   5.5   6.4   -50   -21     0   0.82 #> 9980928: 2010-03-21 23:30:00 207936   5.6   6.4   -50   -21     0   0.82 #>          PRECTOTCORR  RHOA #>                <num> <num> #>       1:           0  1.04 #>       2:           0  1.04 #>       3:           0  1.04 #>       4:           0  1.04 #>       5:           0  1.04 #>      ---                   #> 9980924:           0  1.43 #> 9980925:           0  1.43 #> 9980926:           0  1.43 #> 9980927:           0  1.43 #> 9980928:           0  1.43"},{"path":"https://energyRt.github.io/merra2ools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://energyRt.github.io/merra2ools/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/plot_merra.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick plots of wind speed and its dynamics — plot_merra","title":"Quick plots of wind speed and its dynamics — plot_merra","text":"function progress, included package release.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/plot_merra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick plots of wind speed and its dynamics — plot_merra","text":"","code":"plot_merra(   x,   name = \"W50M\",   scale = 1,   intercept = 0,   limits = c(0, 35),   palette = \"RdYlBu\",   direction = -1,   na.value = \"#040434\",   legend.position = c(0.91, 0.05),   legend.name = \"\",   timestamp.variable = \"UTC\",   timestamp.format = \"%Y-%b-%d, %Hh %Z\",   timestamp.position = c(150, 87),   expand.x = c(0, 0),   expand.y = c(0, 0),   map.border = \"lightgrey\",   map.border.size = 0.25,   ... )"},{"path":"https://energyRt.github.io/merra2ools/reference/plot_merra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick plots of wind speed and its dynamics — plot_merra","text":"x  name  scale  intercept  limits  palette  direction  legend.position  legend.name  timestamp.format  timestamp.position  expand.x  expand.y  ...","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/plot_merra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quick plots of wind speed and its dynamics — plot_merra","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/poa_irradiance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plane-Of-Array (POA) isotropic irradiance model — poa_irradiance","title":"Plane-Of-Array (POA) isotropic irradiance model — poa_irradiance","text":"Plane--Array (POA) isotropic irradiance model","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/poa_irradiance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plane-Of-Array (POA) isotropic irradiance model — poa_irradiance","text":"","code":"poa_irradiance(   x,   array.type = \"fl\",   suffix = TRUE,   AOI = \"AOI\",   GHI = \"SWGDN\",   DNI = \"DNI\",   DHI = \"DHI\",   ALBEDO = \"ALBEDO\",   array.tilt = \"array.tilt\",   zenith = \"zenith\",   tilt.param = tilt.param.default(),   keep.all = FALSE,   verbose = getOption(\"merra2.verbose\"),   ... )  fPOA(   x,   array.type = \"all\",   suffix = TRUE,   UTC = \"UTC\",   yday = \"yday\",   hour = \"hour\",   lon = \"lon\",   lat = \"lat\",   GHI = \"SWGDN\",   integral_steps = 1,   tilt.param = tilt.param.default(),   keep.all = FALSE,   verbose = getOption(\"merra2.verbose\") )"},{"path":"https://energyRt.github.io/merra2ools/reference/poa_irradiance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plane-Of-Array (POA) isotropic irradiance model — poa_irradiance","text":"x data.table `merra2ools` subset, required variables: `UTC` (`yday` `hour`), `locid` (`lon` `lat`), `GHI` (`SWGDN`), array.type  suffix  AOI Angle Incidence, degrees GHI Global Horizontal Irradiance (\\(W/m^2\\)) DNI Direct Normal Irradiance (\\(W/m^2\\)) DHI Diffuse Horizontal Irradiance (\\(W/m^2\\)) array.tilt PV tilt angle, degrees keep. verbose  UTC  yday  hour  lon  lat  albedo ground-reflected portion POA irradiance (\\(W/m^2\\))","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/poa_irradiance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plane-Of-Array (POA) isotropic irradiance model — poa_irradiance","text":"\\[I_{POA} = I_{POA,b} + I_{POA,d} + I_{POA,g}\\] : \\(I_{POA} \\textrm{ - plane--array irradiance } (W/m^2)\\) \\(I_{POA,b} \\textrm{ - beam irradiance hits array } (W/m^2)\\)         \\[I_{POA,b} = DNI\\times\\cos{(AOI)}\\] \\(I_{POA,d} \\textrm{ - sky-diffuse portion POA irradiance } (W/m^2)\\)         \\[I_{POA,d} = DHI\\times\\frac{1+\\cos{(array.tilt)}}{2}\\] \\(I_{POA,g} \\textrm{ - ground-reflected portion POA irradiance } (W/m^2)\\)         \\[I_{POA,g} = GHI\\times{albedo}\\times\\frac{1-\\cos{(array.tilt)}}{2}\\]","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/poa_irradiance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plane-Of-Array (POA) isotropic irradiance model — poa_irradiance","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/pv_array_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Photovoltaic Solar Panel Orientation and Performance Models — pv_array_position","title":"Photovoltaic Solar Panel Orientation and Performance Models — pv_array_position","text":"Photovoltaic Solar Panel Orientation Performance Models","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/pv_array_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Photovoltaic Solar Panel Orientation and Performance Models — pv_array_position","text":"","code":"pv_array_position(   x,   array.type = \"fl\",   suffix = TRUE,   lat = \"lat\",   azimuth_Q = \"azimuth_Q\",   zenith = \"zenith\",   verbose = getOption(\"merra2.verbose\"),   tilt.param = tilt.param.default() )"},{"path":"https://energyRt.github.io/merra2ools/reference/pv_array_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Photovoltaic Solar Panel Orientation and Performance Models — pv_array_position","text":"x data.frame object MERRA-2 subset array.type type tracking () suffix  lat latitude PV location (\\(-90 \\leq lat \\leq 90\\)) azimuth_Q solar azimuth angle PV location (\\(0 \\leq azimuth < 360\\)) zenith solar zenith angle PV location (\\(0 \\leq azimuth \\leq 90\\)) verbose  tilt.param","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/pv_array_position.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Photovoltaic Solar Panel Orientation and Performance Models — pv_array_position","text":"Fixed PV Panel (\\(*.fl\\))  Horizontal Single-Axis PV Tracker (\\(*.th\\))  Vertical Single-Axis Tracker (\\(*.tv\\))  Tilted Single-Axis Tracker (\\(*.tl\\))  Dual-Axis Tracker (\\(*.td\\))","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/pv_array_position.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Photovoltaic Solar Panel Orientation and Performance Models — pv_array_position","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/pv_array_types.html","id":null,"dir":"Reference","previous_headings":"","what":"List tracking system types — pv_array_types","title":"List tracking system types — pv_array_types","text":"List tracking system types","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/pv_array_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List tracking system types — pv_array_types","text":"","code":"pv_array_types(array.type = \"all\", asFactor = FALSE)"},{"path":"https://energyRt.github.io/merra2ools/reference/pv_array_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List tracking system types — pv_array_types","text":"","code":"pv_array_types() #>   array.type                             description #> 1         fh                Fixed (f) horizontal (h) #> 2         fl                    Fixed (f) tilted (l) #> 3         th Single axis horizontal (h) tracking (t) #> 4         tv   Single axis vertical (v) tracking (t) #> 5         tl     Single axis tilted (l) tracking (t) #> 6         td              Dual (d) axis tracking (t) pv_array_types(\"fl\") #>   array.type          description #> 1         fl Fixed (f) tilted (l)"},{"path":"https://energyRt.github.io/merra2ools/reference/read_merra_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads one file from MERRA-2 subset for a given year and month — read_merra_file","title":"Reads one file from MERRA-2 subset for a given year and month — read_merra_file","text":"Reads one file MERRA-2 subset given year month","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/read_merra_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads one file from MERRA-2 subset for a given year and month — read_merra_file","text":"","code":"read_merra_file(YYYYMM, path = get_merra2_dir(), as_integers = FALSE)"},{"path":"https://energyRt.github.io/merra2ools/reference/read_merra_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads one file from MERRA-2 subset for a given year and month — read_merra_file","text":"YYYYMM character, year month path database path original.units original MERRA-2 units returned (converted integer vectors)","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/read_merra_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads one file from MERRA-2 subset for a given year and month — read_merra_file","text":"data.table MERRA-2 subset given year month.","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/read_merra_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads one file from MERRA-2 subset for a given year and month — read_merra_file","text":"","code":"if (FALSE) { # \\dontrun{ read_merra_file(\"201912\") } # }"},{"path":"https://energyRt.github.io/merra2ools/reference/solar_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Solar position — solar_position","title":"Solar position — solar_position","text":"Solar position","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/solar_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solar position — solar_position","text":"","code":"solar_position(   x,   UTC = \"UTC\",   yday = \"yday\",   hour = \"hour\",   lon = \"lon\",   lat = \"lat\",   integral_steps = 1,   keep.all = TRUE,   verbose = getOption(\"merra2.verbose\"),   ... )"},{"path":"https://energyRt.github.io/merra2ools/reference/solar_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solar position — solar_position","text":"x data.frame MERRA-2 subset UTC name (string) column x date time UTC format yday optional name column x day year (consistent UTC time), used \"UTC\" provided hour optional, name column hour day (0 23, UTC time assumed) lon longitude location lat latitude location integral_steps integer number steps calculation solar_time, hour_angle, zenith within hour, logical variable; default 2 (start end every hour) keep.TRUE, interim variables declination, eq_time, solar_time, hour_angle added x returned verbose","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/solar_position.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solar position — solar_position","text":"List data.frame estimated following solar geometry variables: Solar declination (\\(\\theta_d\\))     \\[\\theta_d = \\frac{23.45\\pi}{180}\\sin{\\big(2\\pi\\frac{284+n}{365}\\big)}\\] Equation time (\\(E_{qt}\\))      \\[        E_{qt} = \\begin{cases}          -14.2\\sin{\\big(\\frac{\\pi(n+7)}{111}\\big)}& & {1 \\leq n \\leq 106}\\newline          4.0\\sin{\\big(\\frac{\\pi(n-106)}{59}\\big)}& & {107 \\leq n \\leq 166}\\newline          -6.5\\sin{\\big(\\frac{\\pi(n-166)}{80}\\big)}& & {167 \\leq n \\leq 246}\\newline          16.4\\sin{\\big(\\frac{\\pi(n-247)}{113}\\big)}& & {247 \\leq n \\leq 365}          \\end{cases}        \\] Apparent solar time (\\(T_{solar}\\))      \\[T_{solar} = T_{UTC}+\\frac{E_{qt}}{60}+longitude/15\\] Hour angle (\\(\\theta_{hr}\\))      \\[\\theta_{hr} = \\frac{T_{solar}-12}{12}\\pi\\] Zenith angle      \\[zenith = \\arccos\\big({\\sin{(latitude)}\\sin{(\\theta_d)}+\\cos{(latitude)}\\cos{(\\theta_d)}\\cos{(\\theta_{hr})}\\big)}\\] Azimuth angle      \\[        azimuth = \\begin{cases}          \\arcsin{()}& & {\\geq 0, B \\geq 0}\\newline          180-\\arcsin{()}& & {B < 0}\\newline          360+\\arcsin{()}& & {< 0, B \\geq 0}          \\end{cases}      \\]      \\(n - \\text{day year}\\) \\(= \\sin{(azimuth)} =                        -\\frac{\\sin{(\\theta_{hr})}\\cos{(\\theta_d)}}{\\sin{(zenith)}}\\) \\(B = \\cos{(azimuth)} = \\frac{\\sin{(\\theta_d)}-                         \\sin{(latitude)}\\cos{(zenith)}}{\\cos{(latitude)}\\sin{(zenith)}}\\)","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/solar_position.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solar position — solar_position","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/tilt.param.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default tilt-parameters of tracking systems — tilt.param.default","title":"Default tilt-parameters of tracking systems — tilt.param.default","text":"Default tilt-parameters tracking systems","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/tilt.param.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default tilt-parameters of tracking systems — tilt.param.default","text":"","code":"tilt.param.default(x = NULL)"},{"path":"https://energyRt.github.io/merra2ools/reference/tilt.param.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default tilt-parameters of tracking systems — tilt.param.default","text":"x","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/tilt.param.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default tilt-parameters of tracking systems — tilt.param.default","text":"","code":"str(tilt.param.default()) #> List of 6 #>  $ fh:List of 4 #>   ..$ min         : num 0 #>   ..$ max         : num 0 #>   ..$ shading     : num 90 #>   ..$ backtracking: logi FALSE #>  $ fl:List of 4 #>   ..$ min         : num 0 #>   ..$ max         : num 60 #>   ..$ shading     : num 89 #>   ..$ backtracking: logi FALSE #>  $ th:List of 4 #>   ..$ min         : num 0 #>   ..$ max         : num 60 #>   ..$ shading     : num 89 #>   ..$ backtracking: logi TRUE #>  $ tl:List of 4 #>   ..$ min         : num 0 #>   ..$ max         : num 60 #>   ..$ shading     : num 89 #>   ..$ backtracking: logi TRUE #>  $ tv:List of 4 #>   ..$ min         : num 0 #>   ..$ max         : num 60 #>   ..$ shading     : num 89 #>   ..$ backtracking: logi FALSE #>  $ td:List of 4 #>   ..$ min         : num 0 #>   ..$ max         : num 60 #>   ..$ shading     : num 89 #>   ..$ backtracking: logi TRUE"},{"path":"https://energyRt.github.io/merra2ools/reference/yday2date.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the day of the year to — yday2date","title":"Convert the day of the year to — yday2date","text":"Convert day year ","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/yday2date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the day of the year to — yday2date","text":"","code":"yday2date(yday, year = 2010, tz = \"UTC\")"},{"path":"https://energyRt.github.io/merra2ools/reference/yday2date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the day of the year to — yday2date","text":"yday integer vector days year (1-366) year integer vector years tz character time zone name","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/yday2date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the day of the year to — yday2date","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/reference/yday2month.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — yday2month","title":"Title — yday2month","text":"Title","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/yday2month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — yday2month","text":"","code":"yday2month(yday, leap_year = FALSE)"},{"path":"https://energyRt.github.io/merra2ools/reference/yday2month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — yday2month","text":"yday  leap_year","code":""},{"path":"https://energyRt.github.io/merra2ools/reference/yday2month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — yday2month","text":"","code":"NA #> [1] NA"},{"path":"https://energyRt.github.io/merra2ools/news/index.html","id":"merra2ools-0105","dir":"Changelog","previous_headings":"","what":"merra2ools 0.1.05","title":"merra2ools 0.1.05","text":"Added news, development status roadmap, updated README (2025-05-31). Initial public release (April 2023).","code":""}]
